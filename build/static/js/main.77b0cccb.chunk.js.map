{"version":3,"sources":["hooks/index.js","api/fetch.intercept.js","api/auth.api.js","api/users.api.js","api/roles.api.js","api/subjects.api.js","api/classes.api.js","api/contents.api.js","api/questionBank.api.js","api/gallery.api.js","api/news.api.js","api/headline.api.js","api/tenders.api.js","api/jobs.api.js","api/downloads.api.js","api/links.api.js","api/slider.api.js","api/videos.api.js","api/locations.api.js","api/team.api.js","api/socialLinks.api.js","api/Components.api.js","pages/errors/404.js","redux/types.js","theme/index.js","theme/styles/colors.js","theme/styles/button.js","theme/styles/input.js","theme/styles/textarea.js","theme/styles/select.js","routes/index.js","App.js","reportWebVitals.js","index.js","services/auth.service.js","services/alert.service.js","services/ability.service.js","redux/actions/auth.actions.js","redux/actions/users.action.js","redux/actions/role.action.js","redux/actions/subjects.action.js","redux/actions/questionBank.action.js","redux/actions/gallery.action.js","redux/actions/news.action.js","redux/actions/headline.action.js","redux/actions/tenders.actions.js","redux/actions/jobs.action.js","redux/actions/downloads.action.js","redux/actions/links.action.js","redux/actions/slider.action.js","redux/actions/videos.action.js","redux/actions/locations.action.js","redux/actions/team.action.js","redux/actions/socialLinks.action.js","redux/actions/components.action.js","helpers/resources.js","helpers/index.js","redux/reducers/auth.reducer.js","redux/reducers/roles.reducer.js","redux/reducers/users.reducer.js","redux/reducers/subjects.reducer.js","redux/reducers/classes.reducer.js","redux/reducers/contents.reducer.js","redux/reducers/questionBank.reducer.js","redux/reducers/gallery.reducer.js","redux/reducers/news.reducer.js","redux/reducers/headline.reducer.js","redux/reducers/tenders.reducer.js","redux/reducers/jobs.reducer.js","redux/reducers/downloads.reducer.js","redux/reducers/links.reducer.js","redux/reducers/slider.reducer.js","redux/reducers/videos.reducer.js","redux/reducers/locations.reducer.js","redux/reducers/team.reducer.js","redux/reducers/socialLinks.reducer.js","redux/reducers/components.reducer.js","redux/reducers/index.js","redux/index.js","ui-elements/Icon.js","ui-elements/Splash.js","ui-elements/Loader.js","ui-elements/Drawer.js","ui-elements/Switch.js","ui-elements/Input.js","ui-elements/Select.js","ui-elements/Alert.js","ui-elements/Popover.js","ui-elements/QSwitch.js","ui-elements/TextEditor.js","ui-elements/RadioCard.js"],"names":["useAuth","useContext","AuthContext","useAbility","AbilityContext","Can","createContextualCan","Consumer","refresh_token","localStorage","getItem","tokenName","originalRequest","url","config","interceptor","fetchIntercept","register","request","requestError","error","Promise","reject","response","a","status","includes","AppStore","dispatch","authAction","then","data","token","requestTimeout","apiMaxTime","fetch","handleResponse","responseError","authApi","_login","_logout","_auth_check","_refresh","_resend_request","_forget_password","_check_reset","_reset_password","app_token","sessionStorage","accessToken","requestOptions","method","headers","apiUrl","removeItem","form_data","body","JSON","stringify","setItem","user","usersApi","_get","_add","_update","_delete","_id","id","rolesApi","subjectsApi","_get_classes","_add_class","_update_class","_delete_class","_details","_addChapter","_updateChapter","_deleteChapter","_addTopic","_updateTopic","_deleteTopic","_addContent","_deleteContent","_updateContent","chapterID","topicID","topic_id","file","console","log","contentID","classesApi","contentsApi","questionBankApi","_getByTags","quizID","tags","userID","qBQuestions","newQuestions","quizQuestions","galleryApi","_addGalleryImage","galleryID","newsApi","newsID","headlineApi","headlineID","tendersApi","tenderID","jobsApi","jobID","downloadsApi","downloadID","linksApi","linkID","sliderApi","slideID","videosApi","videoID","locationsApi","locationID","teamApi","ID","socialLinksApi","componentsApi","NotFound","props","AuthConstants","LOGIN","LOGOUT","FAILED","AUTH","UPDATE","REFRESH_TOKEN","REFRESH_TOKEN_FAILED","RoleConstants","GET","DELETE","ADD","UserConstants","SubjectConstants","GET_CLASSES","ADD_CLASS","UPDATE_CLASS","DELETE_CLASS","CLEAR_SUBJECTS","SUBJECT_DETAILS","CLEAR_SUBJECT","ADD_CHAPTER","DELETE_CHAPTER","UPDATE_CHAPTER","FAILED_CHAPTER","ADD_TOPIC","UPDATE_TOPIC","FAILED_TOPIC","DELETE_TOPIC","ADD_CONTENT","UPDATE_CONTENT","FAILED_CONTENT","DELETE_CONTENT","ClassesConstants","ContentsConstants","QuestionBankConstants","GETBYTAGS","CLEAR","GalleryConstants","ADDGALLERYIMAGE","NewsConstants","HeadlineConstants","TendersConstants","JobsConstants","DownloadsConstants","LinksConstants","SliderConstants","VideosConstants","LocationsConstants","TeamConstants","SocialLinksConstants","ComponentsConstants","theme","extendTheme","colors","brand","50","100","200","300","400","500","600","700","800","900","dark","flat","tomato","pink","purple","indigo","navy","blue","aqua","teal","green","lime","yellow","orange","gray","muted","components","Button","baseStyle","backgroundColor","rounded","_focus","boxShadow","_hover","defaultProps","colorScheme","Input","variants","outline","field","bg","borderColor","focusBorderColor","Textarea","Select","Switch","Login","lazy","ForgetPassword","ResetPassword","Dashboard","Routes","auth","loading","in","isEmpty","fallback","exact","path","element","App","store","persistor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","initialState","loggedIn","createContext","init","resolve","login","logout","AuthProvider","useSelector","state","useState","setState","useDispatch","useEffect","loader","Provider","value","catch","e","children","open","title","message","type","AlertContext","show","hide","resolveCallback","val","AlertProvider","alert","confirm","isOpen","onClose","fontSize","fontWeight","mr","onClick","size","variant","ml","window","Ability","CaslAbility","AbilityProvider","roles","AbilityBuilder","can","rules","map","role","Object","entries","permissions","forEach","key","actions","key2","push","update","api","payload","Constants","success","failure","usersAction","get","add","remove","rolesAction","subjectsAction","get_classes","add_class","update_class","remove_class","clear_subjects","clear_subject","details","addChapter","updateChapter","deleteChapter","addTopic","updateTopic","deleteTopic","addContent","deleteContent","updateContent","questionBankAction","getByTags","clearTags","galleryAction","addGalleryImage","newsAction","headlineAction","tendersAction","tendersID","jobsAction","downloadsAction","linksAction","sliderAction","videosAction","locationsAction","teamAction","socialLinksAction","componentsAction","resources","label","name","description","obj","hasOwnProperty","text","my_data","parse","ok","statusText","ms","promise","timer","setTimeout","clearTimeout","reason","users","subjects","classes","subject","contents","questionBankTagQuestions","gallerys","newses","headlines","tenders","jobs","downloads","links","slider","videos","locations","team","socialLinks","combineReducers","action","SETPROFILE","index","findIndex","item","itemsArray","filter","class","class_index","classArray","temp","chapters","chapter","tempArr","Chapter","filterArr","temp_arr","update_arr","arr","topics","topic","t","content_arr","content","delete_arr","update_array","Contents","Content","questionBank","questions","gallery","news","headline","tender","job","download","link","slide","video","location","component","middleware","thunk","persistConfig","storageKey","storage","persistedReducer","persistReducer","appReducer","createStore","compose","applyMiddleware","persistStore","BaseIcon","React","forwardRef","ref","iconProps","className","Icon","chakra","shouldForwardProp","prop","color","cursor","Splash","d","minH","alignItems","justifyContent","bgImage","bgSize","bgAttachment","thickness","speed","emptyColor","Loader","w","h","position","left","top","zIndex","Drawer","modalRef","createRef","transition","closeable","footer","placement","motionPreset","autoFocus","initialFocusRef","blockScrollOnMount","closeOnOverlayClick","closeOnEsc","p","my","display","isFocusable","textarea","date","leftLabel","isInvalid","leftIcon","fileName","Alert","center","flexDirection","boxSize","mt","Popover","innerRef","QSwitch","input","radio","spacing","pt","onChange","m","placeholder","TextEditor","RadioCard","useRadio","getInputProps","getCheckboxProps","checkbox","as","borderWidth","borderRadius","_checked","py","px","Level","useRadioGroup","defaultValue","getRootProps","getRadioProps","group"],"mappings":"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","file":"static/js/main.77b0cccb.chunk.js","sourcesContent":["import { useContext } from 'react';\r\nimport { createContextualCan } from '@casl/react'\r\nimport {AuthContext, AlertContext, AbilityContext} from '../services'\r\n\r\nconst useAuth = () => useContext(AuthContext);\r\nconst useAlert =() => useContext(AlertContext)\r\nconst useAbility = () => useContext(AbilityContext)\r\n\r\nconst Can = createContextualCan(AbilityContext.Consumer)\r\n\r\nexport {useAuth, useAlert, useAbility, Can}\r\n","import fetchIntercept from 'fetch-intercept';\r\nimport {AppStore} from '../redux'\r\nimport { tokenName, apiMaxTime } from '../config.json'\r\nimport { handleResponse, requestTimeout } from '../helpers';\r\nimport {authAction} from '../redux/actions'\r\n\r\n\r\nconst refresh_token = localStorage.getItem(tokenName);\r\nconst originalRequest = {url: null, config: null}\r\n\r\nexport const interceptor = fetchIntercept.register({    \r\n    request: function (url, config) {\r\n        originalRequest.url = url\r\n        originalRequest.config = config\r\n        return [url, config];\r\n    },\r\n \r\n    requestError: function (error) {\r\n        // Called when an error occured during another 'request' interceptor call        \r\n        return Promise.reject(error);\r\n    },\r\n \r\n    response: async function (response) {\r\n        if(response.status === 401)\r\n        {\r\n            let {url, config} = originalRequest            \r\n            if(url.includes('token') || !refresh_token){\r\n                interceptor()\r\n                return Promise.reject(\"Session expired\");\r\n            }\r\n            else\r\n            {   \r\n                AppStore.dispatch(authAction.refresh_token(refresh_token))\r\n                        .then((data) => {                            \r\n                            config['headers']['Authorization'] = 'Bearer '+data.token\r\n                            return requestTimeout(apiMaxTime,fetch(url, config))                                \r\n                        })\r\n                        .then(handleResponse)\r\n                        .then((data) => {                                         \r\n                            return data;\r\n                        });                        \r\n                \r\n            }            \r\n        }\r\n        else\r\n        {\r\n            return response\r\n        }        \r\n    },\r\n \r\n    responseError: function (error) {\r\n        // Handle an fetch error\r\n        return Promise.reject(error);\r\n    }\r\n});","import { apiUrl, tokenName, apiMaxTime, accessToken} from '../config.json'\r\nimport {handleResponse, requestTimeout} from '../helpers'\r\n\r\nexport const authApi = {\r\n    _login,\r\n    _logout,\r\n    _auth_check,\r\n    _refresh,\r\n    _resend_request,\r\n    _forget_password,\r\n    _check_reset,\r\n    _reset_password\r\n};\r\n\r\n\r\nasync function _logout(){\r\n    const app_token = sessionStorage.getItem(accessToken)\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer ' + app_token\r\n        }        \r\n    };\r\n\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'logout', requestOptions))\r\n                .then(handleResponse)\r\n                .then( () => {\r\n                    localStorage.removeItem(tokenName);    \r\n                    sessionStorage.removeItem(accessToken)\r\n                    return true;\r\n                });    \r\n}\r\n\r\nasync function _login(form_data) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify(form_data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'login', requestOptions))\r\n                .then(handleResponse)\r\n                .then((response) => {\r\n                    if (response.refresh_token) {                \r\n                        localStorage.setItem(tokenName, response.refresh_token)\r\n                        sessionStorage.setItem(accessToken, response.token)\r\n                    }\r\n                    return {user: response.user, token: response.token};\r\n                });\r\n}\r\n\r\nasync function _forget_password(form_data) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify(form_data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'forget-password', requestOptions))\r\n                .then(handleResponse)\r\n                .then((response) => {                    \r\n                    return response\r\n                });\r\n}\r\n\r\nasync function _reset_password(form_data) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify(form_data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'reset-password', requestOptions))\r\n                .then(handleResponse)\r\n                .then((response) => {                    \r\n                    return response\r\n                });\r\n}\r\n\r\nasync function _check_reset(form_data) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify(form_data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'check-reset', requestOptions))\r\n                .then(handleResponse)\r\n                .then((response) => {                    \r\n                    return response\r\n                });\r\n}\r\n\r\n\r\nasync function _auth_check() {\r\n    let token = sessionStorage.getItem(accessToken)\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n    };\r\n\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'auth-check', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {\r\n                    // if (data.token) {                \r\n                    //     sessionStorage.setItem(accessToken, data.token);\r\n                    // }\r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _refresh(refresh_token){\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n    if(refresh_token){\r\n        return requestTimeout(apiMaxTime,fetch(apiUrl + 'token?refresh_token='+refresh_token, requestOptions))\r\n            .then(handleResponse)\r\n            .then((data) => {     \r\n                sessionStorage.setItem(accessToken, data?.token)\r\n                return data;\r\n            });\r\n    }\r\n    return Promise.reject({error: 'Unauthorized Access'})\r\n}\r\n\r\nasync function _resend_request(url, config){\r\n    return requestTimeout(apiMaxTime, fetch(url, config))\r\n            .then((data) => {  \r\n                return data;\r\n            });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const usersApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'users', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'users', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'users/'+data?._id, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(id) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'users/'+id, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from '../helpers'\r\n\r\nexport const rolesApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {\r\n\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'roles', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'roles', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'roles/'+data?._id, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(id) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'roles/'+id, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const subjectsApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n    _get_classes,\r\n    _add_class,\r\n    _update_class,\r\n    _delete_class,\r\n    _details,\r\n    _addChapter,\r\n    _updateChapter,\r\n    _deleteChapter,\r\n    _addTopic,\r\n    _updateTopic,\r\n    _deleteTopic,\r\n    _addContent,\r\n    _deleteContent,\r\n    _updateContent,\r\n};\r\nasync function _get(id) {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'subjects/'+id, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            // 'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'subjects', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _update(data, id) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {            \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'subjects/'+id, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(id) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'subjects/'+id, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _get_classes() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'classes', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add_class(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'classes', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _update_class(data, id) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {            \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'classes/'+id, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete_class(id) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'classes/'+id, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _details(id) {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'subjects/details/'+id, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n//chapter\r\nasync function _addChapter(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n             'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'chapters', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _updateChapter(data,chapterID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {\r\n             'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'chapters/'+chapterID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _deleteChapter(chapterID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n             'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'chapters/'+chapterID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n//topics apis\r\nasync function _addTopic(data,chapterID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n             'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'topics/'+chapterID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _updateTopic(data,chapterID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {\r\n             'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'topics/'+chapterID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _deleteTopic(topicID,chapterID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n             'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify({topic_id:topicID})\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'topics/'+chapterID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n//conent\r\nasync function _addContent(data,file,topicID,chapterID) {\r\n    console.log(\"file:\",file)\r\n    console.log(\"data:\",data)\r\n    console.log(\"topicID:\",topicID)\r\n    console.log(\"chapterID:\",chapterID)\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers:file?{'Accept': 'application/json','Authorization': 'Bearer '+app_token}:{'Content-Type': 'application/json','Accept': 'application/json','Authorization': 'Bearer '+app_token},\r\n        body: file?data:JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'contents/'+chapterID+'/topic/'+topicID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _deleteContent(chapterID,topicID,contentID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n           'Accept': 'application/json',\r\n           'Authorization': 'Bearer '+app_token\r\n       },\r\n       body:JSON.stringify({chapterID,topicID})\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'contents/'+contentID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _updateContent(data,file,topicID,chapterID) {\r\n    console.log(\"file:\",file)\r\n    console.log(\"data:\",data)\r\n    console.log(\"topicID:\",topicID)\r\n    console.log(\"chapterID:\",chapterID)\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers:file?{'Accept': 'application/json','Authorization': 'Bearer '+app_token}:{'Content-Type': 'application/json','Accept': 'application/json','Authorization': 'Bearer '+app_token},\r\n        body: file?data:JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'contents/'+chapterID+'/topic/'+topicID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const classesApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'class', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'class', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'class/'+data?._id, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(id) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'class/'+id, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const contentsApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get(topicID) {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'contents/'+topicID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data,file,topicID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers:file?{'Accept': 'application/json','Authorization': 'Bearer '+app_token}:{'Content-Type': 'application/json','Accept': 'application/json','Authorization': 'Bearer '+app_token},\r\n        body: file?data:JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'contents/'+topicID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _update(data,file,contentID) {\r\n    console.log(\"file:\",file)\r\n    console.log(\"data:\",data)\r\n    console.log(\"contentID:\",contentID)\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers:file?{'Accept': 'application/json','Authorization': 'Bearer '+app_token}:{'Content-Type': 'application/json','Accept': 'application/json','Authorization': 'Bearer '+app_token},\r\n        body: file?data:JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'contents/'+contentID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(contentID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'contents/'+contentID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const questionBankApi = {\r\n    _get,\r\n    _getByTags,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get(quizID) {    \r\n    console.log(\"get Request:\",quizID)\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'questions/'+quizID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _getByTags(tags,quizID,userID) {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body:JSON.stringify(tags)\r\n\r\n    };\r\n    console.log('userID:',userID)\r\n    return requestTimeout(apiMaxTime,userID?fetch(apiUrl + 'questions_/'+quizID+'/user/'+userID, requestOptions):fetch(apiUrl + 'questions_/'+quizID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(qBQuestions,newQuestions,quizQuestions,quizID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers:{'Content-Type': 'application/json','Accept': 'application/json','Authorization': 'Bearer '+app_token},\r\n        body: JSON.stringify({qBQuestions,newQuestions,quizQuestions})\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'questions/'+quizID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _update(data,file,contentID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers:file?{'Accept': 'application/json','Authorization': 'Bearer '+app_token}:{'Content-Type': 'application/json','Accept': 'application/json','Authorization': 'Bearer '+app_token},\r\n        body: file?data:JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'contents/'+contentID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(contentID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'contents/'+contentID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const galleryApi = {\r\n    _get,\r\n    _add,\r\n    _addGalleryImage,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'gallery', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'gallery', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _addGalleryImage(data,galleryID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'gallery/'+galleryID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {            \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'gallery/', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(galleryID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'gallery/'+galleryID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const newsApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'news', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'news', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {            \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'news', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(newsID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'news/'+newsID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const headlineApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'headlines', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'headline', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {        \r\n            'Content-Type': 'application/json',    \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'headline', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(headlineID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'headline/'+headlineID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const tendersApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'tenders', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'tenders', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {            \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'tenders', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(tenderID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'tenders/'+tenderID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const jobsApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'jobs', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'jobs', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {        \r\n            'Content-Type': 'application/json',    \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'jobs', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(jobID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'jobs/'+jobID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const downloadsApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'downloads', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'downloads', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {            \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'downloads', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(downloadID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'downloads/'+downloadID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const linksApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'links', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'links', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {        \r\n            'Content-Type': 'application/json',    \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'links', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(linkID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'links/'+linkID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const sliderApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'slider', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    console.log(\"data:\",data)\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'slider', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {            \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'slider', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(slideID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'slider/'+slideID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const videosApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'videos', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'videos', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {            \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'videos', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(videoID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'videos/'+videoID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const locationsApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'locations', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'locations', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {            \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: data\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'locations', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(locationID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'locations/'+locationID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const teamApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'team', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'team', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {        \r\n            'Content-Type': 'application/json',    \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'team', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(ID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'team/'+ID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const socialLinksApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'socialLinks', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'socialLinks', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {        \r\n            'Content-Type': 'application/json',    \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'socialLinks', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(linkID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'socialLinks/'+linkID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import { apiUrl, accessToken, apiMaxTime } from '../config.json' \r\nimport {handleResponse, requestTimeout} from './../helpers'\r\n\r\nexport const componentsApi = {\r\n    _get,\r\n    _add,\r\n    _update,\r\n    _delete,\r\n};\r\nasync function _get() {    \r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'components', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\n\r\nasync function _add(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'component', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\nasync function _update(data) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {        \r\n            'Content-Type': 'application/json',    \r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'component', requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}\r\n\r\nasync function _delete(ID) {\r\n    let app_token = sessionStorage.getItem(accessToken);\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer '+app_token\r\n        }\r\n    };\r\n    return requestTimeout(apiMaxTime,fetch(apiUrl + 'component/'+ID, requestOptions))\r\n                .then(handleResponse)\r\n                .then((data) => {                \r\n                    return data;\r\n                });\r\n}","import React from 'react'\r\n\r\n\r\nconst NotFound = (props) => {\r\n\r\n    return(\r\n        <p>404 Page Not Found</p>\r\n    )\r\n}\r\n\r\n\r\nexport default NotFound;","export const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const AuthConstants = {\r\n    LOGIN: 'AUTH_LOGIN',\r\n    LOGOUT: 'AUTH_LOGOUT',\r\n    FAILED: 'AUTH_FAILED',\r\n    AUTH: 'CHECK_USER_AUTH',\r\n    UPDATE: 'UPDATE_PROFILE',\r\n    REFRESH_TOKEN: 'REFRESH_TOKEN',\r\n    REFRESH_TOKEN_FAILED: 'REFRESH_TOKEN_FAILED'\r\n}\r\n\r\nexport const RoleConstants = {\r\n    GET: 'GET_ROLES',\r\n    UPDATE: 'UPDATE_ROLE',\r\n    FAILED: 'FAILED_ROLE',\r\n    DELETE: 'ROLE_DELETE',\r\n    ADD: 'ROLE_ADD'\r\n}\r\n\r\nexport const UserConstants = {\r\n    GET: 'GET_USERS',\r\n    UPDATE: 'USERS_UPDATE',\r\n    FAILED: 'USERS_FAILED',\r\n    DELETE: 'USER_DELETE',\r\n    ADD: 'USERS_ADD'\r\n}\r\nexport const SubjectConstants = {\r\n    GET: 'GET_SUBJECTS',\r\n    UPDATE: 'SUBJECTS_UPDATE',\r\n    FAILED: 'SUBJECTS_FAILED',\r\n    DELETE: 'SUBJECTS_DELETE',\r\n    ADD: 'SUBJECTS_ADD',\r\n    GET_CLASSES: 'GET_ALL_CLASSES',\r\n    ADD_CLASS: 'ADD_NEW_CLASS',\r\n    UPDATE_CLASS: 'UPDATE_CLASS',\r\n    DELETE_CLASS: 'DELETE_CLASS',\r\n    CLEAR_SUBJECTS: 'CLEAR_SUBJECTS',\r\n    SUBJECT_DETAILS: 'GET_SUBJECT_DETAILS',\r\n    CLEAR_SUBJECT: \"CLEAR_SUBJECT_DETAILS\",\r\n    ADD_CHAPTER:'ADD_CHAPTER',\r\n    DELETE_CHAPTER:'DELETE_CHAPTER',\r\n    UPDATE_CHAPTER:'UPDATE_CHAPTER',\r\n    FAILED_CHAPTER:'CHAPTER_FAILED',\r\n    ADD_TOPIC:'ADD_TOPIC',\r\n    UPDATE_TOPIC:'UPDATE_TOPIC',\r\n    FAILED_TOPIC:'FAILED_TOPIC',\r\n    DELETE_TOPIC:'DELETE_TOPIC',\r\n    ADD_CONTENT:'ADD_CONTENT',\r\n    UPDATE_CONTENT:'UPDATE_CONTENT',\r\n    FAILED_CONTENT:'FAILED_CONTENT',\r\n    DELETE_CONTENT:'DELETE_CONTENT',\r\n}\r\nexport const ClassesConstants = {\r\n    GET: 'GET_CLASSES',\r\n    UPDATE: 'CLASSES_UPDATE',\r\n    FAILED: 'CLASSES_FAILED',\r\n    DELETE: 'CLASSES_DELETE',\r\n    ADD: 'CLASSES_ADD'\r\n}\r\nexport const ContentsConstants = {\r\n    GET: 'GET_CONTENTS',\r\n    UPDATE: 'CONTENTS_UPDATE',\r\n    FAILED: 'CONTENTS_FAILED',\r\n    DELETE: 'CONTENTS_DELETE',\r\n    ADD: 'CONTENTS_ADD'\r\n}\r\nexport const QuestionBankConstants = {\r\n    GET: 'GET_QUESTIONBANK',\r\n    GETBYTAGS:'GETBYTAGS_QUESTIONBANK',\r\n    UPDATE: 'QUESTIONBANK_UPDATE',\r\n    FAILED: 'QUESTIONBANK_FAILED',\r\n    DELETE: 'QUESTIONBANK_DELETE',\r\n    ADD: 'QUESTIONBANK_ADD',\r\n    CLEAR:'CLEAR_GETBYTAGS'\r\n}\r\nexport const GalleryConstants = {\r\n    GET: 'GET_GALLERY',\r\n    UPDATE: 'GALLERY_UPDATE',\r\n    FAILED: 'GALLERY_FAILED',\r\n    DELETE: 'GALLERY_DELETE',\r\n    ADD: 'GALLERY_ADD',\r\n    ADDGALLERYIMAGE:'ADD_GALLERY_IMAGES',\r\n}\r\nexport const NewsConstants = {\r\n    GET: 'GET_NEWS',\r\n    UPDATE: 'NEWS_UPDATE',\r\n    FAILED: 'NEWS_FAILED',\r\n    DELETE: 'NEWS_DELETE',\r\n    ADD: 'NEWS_ADD',\r\n}\r\nexport const HeadlineConstants = {\r\n    GET: 'GET_HEADLINES',\r\n    UPDATE: 'HEADLINE_UPDATE',\r\n    FAILED: 'HEADLINE_FAILED',\r\n    DELETE: 'HEADLINE_DELETE',\r\n    ADD: 'HEADLINE_ADD',\r\n}\r\nexport const TendersConstants = {\r\n    GET: 'GET_TENDERS',\r\n    UPDATE: 'TENDERS_UPDATE',\r\n    FAILED: 'TENDERS_FAILED',\r\n    DELETE: 'TENDERS_DELETE',\r\n    ADD: 'TENDERS_ADD',\r\n}\r\nexport const JobsConstants = {\r\n    GET: 'GET_JOBS',\r\n    UPDATE: 'JOBS_UPDATE',\r\n    FAILED: 'JOBS_FAILED',\r\n    DELETE: 'JOBS_DELETE',\r\n    ADD: 'JOBS_ADD',\r\n}\r\nexport const DownloadsConstants = {\r\n    GET: 'GET_DOWNLOADS',\r\n    UPDATE: 'DOWNLOADS_UPDATE',\r\n    FAILED: 'DOWNLOADS_FAILED',\r\n    DELETE: 'DOWNLOADS_DELETE',\r\n    ADD: 'DOWNLOADS_ADD',\r\n}\r\nexport const LinksConstants = {\r\n    GET: 'GET_LINKS',\r\n    UPDATE: 'LINKS_UPDATE',\r\n    FAILED: 'LINKS_FAILED',\r\n    DELETE: 'LINKS_DELETE',\r\n    ADD: 'LINKS_ADD',\r\n}\r\nexport const SliderConstants = {\r\n    GET: 'GET_SLIDER',\r\n    UPDATE: 'SLIDE_UPDATE',\r\n    FAILED: 'SLIDE_FAILED',\r\n    DELETE: 'SLIDE_DELETE',\r\n    ADD: 'SLIDE_ADD',\r\n}\r\nexport const VideosConstants = {\r\n    GET: 'GET_VIDEOS',\r\n    UPDATE: 'VIDEO_UPDATE',\r\n    FAILED: 'VIDEOS_FAILED',\r\n    DELETE: 'VIDEO_DELETE',\r\n    ADD: 'VIDEO_ADD',\r\n}\r\nexport const LocationsConstants = {\r\n    GET: 'GET_LOCATIONS',\r\n    UPDATE: 'LOCATION_UPDATE',\r\n    FAILED: 'LOCATIONS_FAILED',\r\n    DELETE: 'LOCATION_DELETE',\r\n    ADD: 'LOCATION_ADD',\r\n}\r\nexport const TeamConstants = {\r\n    GET: 'GET_TEAM',\r\n    UPDATE: 'TEAM_UPDATE',\r\n    FAILED: 'TEAM_FAILED',\r\n    DELETE: 'TEAM_DELETE',\r\n    ADD: 'TEAM_ADD',\r\n}\r\nexport const SocialLinksConstants = {\r\n    GET: 'GET_SOCIALLINKS',\r\n    UPDATE: 'SOCIALLINK_UPDATE',\r\n    FAILED: 'SOCIALLINKS_FAILED',\r\n    DELETE: 'SOCIALLINK_DELETE',\r\n    ADD: 'SOCIALLINK_ADD',\r\n}\r\nexport const ComponentsConstants = {\r\n    GET: 'GET_COMPONENTS',\r\n    UPDATE: 'COMPONENT_UPDATE',\r\n    FAILED: 'COMPONENTS_FAILED',\r\n    DELETE: 'COMPONENT_DELETE',\r\n    ADD: 'COMPONENT_ADD',\r\n}","import { extendTheme } from \"@chakra-ui/react\"\r\nimport { colors, button, input, textarea, select } from \"./styles\"\r\n\r\nexport const theme = extendTheme({\r\n    colors: colors,\r\n    components:{\r\n        Button: button,\r\n        Input: input,\r\n        Textarea: textarea,\r\n        Select: select,\r\n        Switch: {\r\n            baseStyle: {\r\n                backgroundColor: 'brand',\r\n                rounded: 'md',\r\n                _focus: { \r\n                    boxShadow: 'none' \r\n                }\r\n            },\r\n        }\r\n    }\r\n})","export const colors = {\r\n    brand: {\r\n        50: \"#D9FBD4\",\r\n        100: \"#D9FBD4\",\r\n        200: \"#ADF8AB\",\r\n        300: \"#7DEA84\",\r\n        400: \"#59D66D\",\r\n        500: \"#CC723F\",\r\n        600: \"#ba6230\",\r\n        700: \"#158748\",\r\n        800: \"#0D6D41\",\r\n        900: \"#085A3C\",\r\n    },\r\n    dark:{\r\n        50: \"#F0F2F6\",\r\n        100: \"#F0F2F6\",\r\n        200: \"#E1E5ED\",\r\n        300: \"#BABEC9\",\r\n        400: \"#868993\",\r\n        500: \"#43454C\",\r\n        600: \"#303441\",\r\n        700: \"#212536\",\r\n        800: \"#15182C\",\r\n        900: \"#0C0F24\",\r\n    },\r\n    flat:{            \r\n        tomato: \"#FB4630\",\r\n        pink: \"#FE445F\",\r\n        purple: \"#773DE3\",\r\n        indigo: \"#B28FF0\",\r\n        navy: \"#3C50BC\",\r\n        blue: \"#3389E1\",\r\n        aqua: \"#00C3ED\",\r\n        teal: \"#009988\",\r\n        green: \"#77C33E\",\r\n        lime: \"#A8E172\",\r\n        yellow: \"#FFCC34\",\r\n        orange: \"#FFB718\",\r\n        gray: \"#616C78\"\r\n    },\r\n    muted:{            \r\n        tomato: \"rgba(251,70,48, 0.25)\",\r\n        pink: \"rgba(254,68,95, 0.25)\",\r\n        purple: \"rgba(119,61,227, 0.25)\",\r\n        indigo: \"rgba(178,141,240, 0.25)\",\r\n        navy: \"rgba(60,80,188, 0.25)\",\r\n        blue: \"rgba(51,137,225, 0.25)\",\r\n        aqua: \"rgba(0,195,237, 0.25)\",\r\n        teal: \"rgba(0,189,153, 0.25)\",\r\n        green: \"rgba(119,195,62, 0.25)\",\r\n        lime: \"rgba(168,225,114, 0.25)\",\r\n        yellow: \"rgba(255,204,52, 0.25)\",\r\n        orange: \"rgba(255,183,24, 0.25)\",\r\n        gray: \"rgba(97,108,120, 0.25)\",\r\n    }      \r\n}","export const button = {\r\n        baseStyle: {\r\n            backgroundColor: 'brand',\r\n            rounded: 'md',\r\n            _focus: { \r\n                boxShadow: 'none' \r\n            },\r\n            _hover:{\r\n                backgroundColor:'brand.600'\r\n            }\r\n        },\r\n        defaultProps: {\r\n            colorScheme: 'brand'\r\n        },\r\n}","export const input = {    \r\n        baseStyle:{\r\n            backgroundColor: 'white',\r\n        },\r\n        variants: {\r\n            outline: {\r\n                field:{\r\n                    bg: 'white',\r\n                    _focus: {\r\n                        // bg: 'gray.50',\r\n                        boxShadow:'none',\r\n                        borderColor: 'brand.500',\r\n                    },\r\n                    _hover:{\r\n                        borderColor: 'gray.500',\r\n                    }\r\n                }\r\n            },\r\n        },\r\n        defaultProps: {\r\n            focusBorderColor: 'brand.600',\r\n        }\r\n    }\r\n\r\n","export const textarea = {    \r\n        baseStyle:{\r\n            backgroundColor: 'white',\r\n        },\r\n        variants: {\r\n            outline: {\r\n                field:{\r\n                    bg: 'white',\r\n                    _focus: {\r\n                        // bg: 'gray.50',\r\n                        boxShadow:'none',\r\n                        borderColor: 'brand.500',\r\n                    },\r\n                    _hover:{\r\n                        borderColor: 'gray.500',\r\n                        \r\n                    }\r\n                }\r\n            },\r\n        },\r\n        defaultProps: {\r\n            focusBorderColor: 'brand.600',\r\n        }\r\n    }\r\n\r\n","export const select = {    \r\n        baseStyle:{\r\n            backgroundColor: 'white',\r\n        },\r\n        variants: {\r\n            outline: {\r\n                field:{\r\n                    bg: 'white',\r\n                    _focus: {\r\n                        // bg: 'gray.50',\r\n                        boxShadow:'none',\r\n                        borderColor: 'brand.500',\r\n                    },\r\n                    _hover:{\r\n                        borderColor: 'gray.500',\r\n                    }\r\n                }\r\n            },\r\n        },\r\n        defaultProps: {\r\n            focusBorderColor: 'brand.600',\r\n        }\r\n    }\r\n\r\n","import React, {Suspense, lazy } from 'react'\r\nimport { BrowserRouter as Router, Route, Routes as Switch } from 'react-router-dom'\r\nimport {Splash} from '../ui-elements'\r\nimport {Fade} from '@chakra-ui/react'\r\nimport { AbilityProvider } from '../services'\r\nimport { useAuth } from '../hooks'\r\nimport { isEmpty } from '../helpers'\r\nimport NotFound from '../pages/errors/404'\r\nconst Login = lazy(() => import('./../pages/auth'))\r\nconst ForgetPassword = lazy(() => import('./../pages/auth/ForgetPassword'))\r\nconst ResetPassword = lazy(() => import('./../pages/auth/ResetPassword'))\r\nconst Dashboard = lazy(() => import('./../pages/dashboard'))\r\n\r\n\r\n\r\nconst  Routes = () => {    \r\n    \r\n    const auth = useAuth();\r\n\r\n    if(auth.loading)\r\n    {\r\n        return(\r\n            <Fade in={true}>\r\n                <Splash />\r\n            </Fade>\r\n        )\r\n    }\r\n\r\n    if(isEmpty(auth.user) || !auth.token) \r\n    {\r\n        return (\r\n            <Fade in={true}>\r\n                <Suspense fallback={<Splash />}>\r\n                    <Router>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" element={<Login/>} />\r\n                            <Route exact path=\"/forget-password\" element={<ForgetPassword/>} />\r\n                            <Route exact path=\"/reset-password/:hash/:id\" element={<ResetPassword/>} />\r\n                            <Route path=\"*\"  element={<NotFound />} /> \r\n                        </Switch>\r\n                    </Router>\r\n                </Suspense>\r\n            </Fade>\r\n        )\r\n    }\r\n\r\n    return (                \r\n            <Fade in={true}>\r\n                <AbilityProvider>\r\n                    <Suspense fallback={<Splash />}>\r\n                        <Router>\r\n                            <Switch>\r\n                                <Route path=\"/*\" element={<Dashboard/>} />\r\n                            </Switch>\r\n                        </Router>\r\n                    </Suspense>\r\n                </AbilityProvider>\r\n            </Fade>                \r\n    )\r\n}\r\n\r\nexport default Routes;","import React from 'react'\r\nimport { ChakraProvider } from \"@chakra-ui/react\"\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { Provider } from 'react-redux';\r\nimport { AppStore, persistor } from './redux'\r\nimport { AlertProvider, AuthProvider } from './services'\r\nimport {theme} from './theme'\r\nimport Routes from './routes'\r\n\r\nconst App = () => {    \r\n    return (\r\n        <Provider store={AppStore}>\r\n            <PersistGate loading={null} persistor={persistor}>\r\n                <ChakraProvider theme={theme}>    \r\n                    <AlertProvider>\r\n                        <AuthProvider>                            \r\n                            <Routes />                              \r\n                        </AuthProvider>                        \r\n                    </AlertProvider>\r\n                </ChakraProvider>\r\n            </PersistGate>\r\n        </Provider>\r\n      )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React, { createContext, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authAction } from '../redux/actions';\r\nimport {accessToken} from '../config.json'\r\nimport { authApi } from '../api';\r\n\r\nconst initialState = {\r\n    user: null,   \r\n    loggedIn: false,\r\n    loading: true,\r\n    token: sessionStorage.getItem(accessToken)\r\n};\r\n\r\nconst AuthContext = createContext({\r\n    ...initialState,\r\n    init: () => Promise.resolve(),\r\n    login: () => Promise.resolve(),     \r\n    logout: () => Promise.resolve(),\r\n});\r\n\r\n\r\nexport const AuthProvider = (props) => {\r\n    const auth = useSelector(state => state.auth);\r\n    const [state, setState] = useState({...initialState, ...auth})\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n      init()\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state,\r\n            ...auth\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [auth])\r\n\r\n    const init = async () => {     \r\n        // setTimeout(function() { loader() }, 1500);\r\n        await loader()\r\n    }\r\n\r\n    const login = (form_data) => {\r\n        return new Promise((resolve, reject) => {\r\n            dispatch(authAction.login(form_data))\r\n            .then((response) => {\r\n                resolve(response) \r\n            })\r\n            .catch((error) => reject(error) )\r\n        })\r\n\r\n    }\r\n\r\n    const logout = () => {\r\n        return new Promise((resolve, reject) => {\r\n        dispatch(authAction.logout())\r\n            .then(() => {\r\n                setState({...state, user:null, token: null})                \r\n                resolve()\r\n            })\r\n            .catch((e) => {\r\n                reject()\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n    /* Check initial authentication here */\r\n    const loader =  async () => {        \r\n        try{\r\n            await authApi._auth_check()\r\n            setState({...state, loading: false})\r\n        }\r\n        catch(err){\r\n            console.log(\"Error\", err)\r\n            console.log(\"State\", state)\r\n            sessionStorage.removeItem(accessToken)\r\n            setState({...state, user: null, token: null, loading: false})\r\n            // console.log(\"Error 2\", err)\r\n            \r\n        }\r\n    }\r\n    \r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                ...state,\r\n                login,\r\n                logout\r\n            }}>\r\n            {props.children}\r\n            \r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport  {AuthContext}","import React, { createContext, useState } from 'react';\r\nimport {\r\n    AlertDialog,\r\n    AlertDialogBody,\r\n    AlertDialogFooter,\r\n    AlertDialogHeader,\r\n    AlertDialogContent,\r\n    AlertDialogOverlay,\r\n    Button,\r\n    Box,\r\n} from \"@chakra-ui/react\"\r\n\r\nconst initialState = {\r\n    open: false,     \r\n    title: 'Alert',\r\n    message: '',\r\n    type: 'alert'\r\n};\r\n\r\n\r\nconst AlertContext = createContext({\r\n    ...initialState,\r\n    init: () => Promise.resolve(),\r\n    show: () => Promise.resolve(),     \r\n    hide: () => Promise.resolve()\r\n});\r\n\r\n\r\n\r\nlet resolveCallback = (val) => {\r\n    return val;\r\n}\r\n\r\n\r\nexport const AlertProvider = (props) => {\r\n\r\n    const [state, setState] = useState(initialState)\r\n    \r\n\r\n    const show = (title=initialState.title, message=\"\") => {\r\n        setState({...state, open: true, title, message})\r\n    }\r\n\r\n    const alert = (message=\"\", title=initialState.title) => {\r\n        setState({...state, open: true, type: 'alert', title, message})\r\n    }\r\n\r\n    const onConfirm = () => {\r\n        setState({...state, open: false})\r\n        resolveCallback(true);\r\n    };\r\n\r\n    const onCancel = () => {\r\n        setState({...state, open: false})\r\n        resolveCallback(false);\r\n    };\r\n\r\n    const confirm = (message=\"\", title='Confirm', yesCallBack, noCallBack) => {\r\n        setState({...state, open: true, type: 'confirm', title, message})\r\n        return new Promise((resolve, reject) => {\r\n            return resolveCallback = resolve;\r\n        })\r\n    }\r\n\r\n    \r\n\r\n   \r\n\r\n    const hide = () => {\r\n        setState({...state, open: false})\r\n        return false;\r\n    }\r\n  \r\n\r\n    const setAlert = () => {                        \r\n        window.alert = alert\r\n        window.confirm = confirm\r\n    }\r\n    return (\r\n        <AlertContext.Provider value={{show, hide, alert}}>\r\n            <AlertDialog\r\n                isOpen={state.open}\r\n                onClose={hide}\r\n                >\r\n                <AlertDialogOverlay>\r\n                    <AlertDialogContent>\r\n                        <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                            {state.title}\r\n                        </AlertDialogHeader>\r\n                        <AlertDialogBody>\r\n                            {state.message}\r\n                        </AlertDialogBody>\r\n                        <AlertDialogFooter>\r\n                            {\r\n                                state.type !== 'alert' &&\r\n                                <Box>\r\n                                    <Button mr=\"20px\" onClick={onConfirm} size=\"sm\" colorScheme=\"red\" > \r\n                                        Yes\r\n                                    </Button>\r\n\r\n                                    <Button size=\"sm\" colorScheme=\"gray\" onClick={onCancel}>\r\n                                        No\r\n                                    </Button>\r\n                                </Box>\r\n                            }\r\n                            {\r\n                                state.type === 'alert' &&\r\n                                <Button colorScheme=\"red\" variant=\"outline\" size=\"sm\" onClick={hide} ml={3}>\r\n                                    OK\r\n                                </Button>\r\n                            }\r\n                            \r\n                        </AlertDialogFooter>\r\n                    </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n            </AlertDialog>\r\n            {props.children}\r\n            {setAlert()}\r\n        </AlertContext.Provider>\r\n    );\r\n}\r\nexport {AlertContext}","import React, { createContext, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Ability as CaslAbility, AbilityBuilder } from '@casl/ability';\r\n\r\nconst  Ability = new CaslAbility([]);\r\n\r\nconst AbilityContext = createContext();\r\n\r\nexport const AbilityProvider = (props) => {\r\n    const {user} = useSelector(state => state.auth);        \r\n    \r\n    useEffect(() => {\r\n        if(user && user?.roles){\r\n            let roles = user?.roles;\r\n            const { can, rules } = new AbilityBuilder();\r\n            roles.map((role) => {\r\n                return Object.entries(role.permissions).forEach(([key, val]) => {                                                \r\n                        let actions = [];\r\n                        Object.entries(val).forEach(([key2, val2]) => {\r\n                            if(val2){\r\n                                actions.push(key2)\r\n                                can(key2, key);\r\n                            }\r\n                        })\r\n                    });\r\n                \r\n            })                        \r\n            Ability.update(rules);            \r\n        }        \r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [user])\r\n\r\n   \r\n    \r\n    return (\r\n        <AbilityContext.Provider\r\n            value={Ability}>\r\n            {props.children}            \r\n        </AbilityContext.Provider>\r\n    );\r\n}\r\n\r\nexport  {AbilityContext}","import { AuthConstants as Constants } from '../types'\r\nimport { authApi as api } from '../../api'\r\n\r\nexport const authAction = {\r\n    login,\r\n    logout,\r\n    refresh_token\r\n};\r\n\r\nfunction login(form_data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._login(form_data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.LOGIN, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction logout() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._logout()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success());\r\n                        resolve()\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n        });\r\n    function success() { return { type: Constants.LOGOUT } }\r\n    function failure() { return { type: Constants.FAILED } }\r\n    }\r\n}\r\n\r\nfunction refresh_token(token) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._refresh(token)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.REFRESH_TOKEN, payload } }\r\n    function failure(error) { return { type: Constants.REFRESH_TOKEN_FAILED, error } }\r\n}","import { UserConstants as Constants } from '../types'\r\nimport { usersApi as api } from '../../api'\r\n\r\nexport const usersAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n \r\n};\r\n\r\n\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(id) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(id)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}","import { RoleConstants as Constants } from '../types'\r\nimport { rolesApi as api } from '../../api'\r\n\r\nexport const rolesAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n \r\n};\r\n\r\n\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(id) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(id)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}","import { SubjectConstants as Constants } from '../types'\r\nimport { subjectsApi as api } from '../../api'\r\n\r\nexport const subjectsAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove,\r\n    get_classes,\r\n    add_class,\r\n    update_class,\r\n    remove_class,\r\n    clear_subjects,\r\n    clear_subject,\r\n    details,\r\n    addChapter,\r\n    updateChapter,\r\n    deleteChapter,\r\n    addTopic,\r\n    updateTopic,\r\n    deleteTopic,\r\n    addContent,\r\n    deleteContent,\r\n    updateContent,\r\n};\r\n\r\n\r\nfunction get(id) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get(id)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction update(data, id) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data, id)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(id) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(id)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction get_classes() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get_classes()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET_CLASSES, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n\r\nfunction add_class(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add_class(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD_CLASS, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction update_class(data, id) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update_class(data, id)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE_CLASS, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove_class(id) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete_class(id)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE_CLASS, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction clear_subjects() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n                dispatch(success());\r\n                resolve()                    \r\n        });\r\n    }\r\n    function success() { return { type: Constants.CLEAR_SUBJECTS } }\r\n}\r\n\r\nfunction details(id) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._details(id)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.SUBJECT_DETAILS, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction clear_subject() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n                dispatch(success());\r\n                resolve()                    \r\n        });\r\n    }\r\n    function success() { return { type: Constants.CLEAR_SUBJECT } }\r\n}\r\n//chapter \r\nfunction addChapter(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._addChapter(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD_CHAPTER, payload } }\r\n    function failure(error) { return { type: Constants.FAILED_CHAPTER, error } }\r\n}\r\nfunction updateChapter(data,chapterID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._updateChapter(data,chapterID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE_CHAPTER, payload } }\r\n    function failure(error) { return { type: Constants.FAILED_CHAPTER, error } }\r\n}\r\nfunction deleteChapter(chapterID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._deleteChapter(chapterID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE_CHAPTER, payload } }\r\n    function failure(error) { return { type: Constants.FAILED_CHAPTER, error } }\r\n}\r\n//topic actions\r\nfunction addTopic(data,chapterID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._addTopic(data,chapterID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD_TOPIC, payload } }\r\n    function failure(error) { return { type: Constants.FAILED_TOPIC, error } }\r\n}\r\nfunction updateTopic(data,chapterID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._updateTopic(data,chapterID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE_TOPIC, payload } }\r\n    function failure(error) { return { type: Constants.FAILED_TOPIC, error } }\r\n}\r\nfunction deleteTopic(topicID,chapterID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._deleteTopic(topicID,chapterID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE_TOPIC, payload } }\r\n    function failure(error) { return { type: Constants.FAILED_TOPIC, error } }\r\n}\r\n//content\r\nfunction addContent(data,file,topicID,chapterID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._addContent(data,file,topicID,chapterID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD_CONTENT, payload } }\r\n    function failure(error) { return { type: Constants.FAILED_CONTENT, error } }\r\n}\r\nfunction deleteContent(chapterID,topicID,contentID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._deleteContent(chapterID,topicID,contentID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE_CONTENT, payload } }\r\n    function failure(error) { return { type: Constants.FAILED_CONTENT, error } }\r\n}\r\nfunction updateContent(data,file,topicID,chapterID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._updateContent(data,file,topicID,chapterID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE_CONTENT, payload } }\r\n    function failure(error) { return { type: Constants.FAILED_CONTENT, error } }\r\n}","import { QuestionBankConstants as Constants } from '../types'\r\nimport { questionBankApi as api } from '../../api'\r\n\r\nexport const questionBankAction = {\r\n    get,\r\n    getByTags,\r\n    clearTags,\r\n    add,\r\n    update,\r\n    remove\r\n \r\n};\r\n\r\n\r\nfunction get(quizID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get(quizID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction getByTags(tags,quizID,userID=false) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._getByTags(tags,quizID,userID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GETBYTAGS, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction clearTags() {\r\n    return { type: Constants.CLEAR, payload:[] } \r\n}\r\n\r\nfunction add(qBQuestions,newQuestions,quizQuestions,contentID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(qBQuestions,newQuestions,quizQuestions,contentID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction update(data,file,quizID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data,file,quizID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(contentID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(contentID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}","import { GalleryConstants as Constants } from '../types'\r\nimport { galleryApi as api } from '../../api'\r\n\r\nexport const galleryAction = {\r\n    get,\r\n    add,\r\n    addGalleryImage,\r\n    update,\r\n    remove\r\n}\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\nfunction addGalleryImage(data,galleryID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._addGalleryImage(data,galleryID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADDGALLERYIMAGE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(galleryID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(galleryID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n","import { NewsConstants as Constants } from '../types'\r\nimport { newsApi as api } from '../../api'\r\n\r\nexport const newsAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n}\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(newsID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(newsID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n","import { HeadlineConstants as Constants } from '../types'\r\nimport { headlineApi as api } from '../../api'\r\n\r\nexport const headlineAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n}\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(newsID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(newsID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n","import { TendersConstants as Constants } from '../types'\r\nimport { tendersApi as api } from '../../api'\r\n\r\nexport const tendersAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n}\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(tendersID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(tendersID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n","import { JobsConstants as Constants } from '../types'\r\nimport { jobsApi as api } from '../../api'\r\n\r\nexport const jobsAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n}\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(jobID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(jobID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n","import { DownloadsConstants as Constants } from '../types'\r\nimport { downloadsApi as api } from '../../api'\r\n\r\nexport const downloadsAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n}\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(downloadID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(downloadID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n","import { LinksConstants as Constants } from '../types'\r\nimport { linksApi as api } from '../../api'\r\n\r\nexport const linksAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n}\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(linkID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(linkID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n","import { SliderConstants as Constants } from '../types'\r\nimport { sliderApi as api } from '../../api'\r\n\r\nexport const sliderAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n}\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(slideID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(slideID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n","import { VideosConstants as Constants } from '../types'\r\nimport { videosApi as api } from '../../api'\r\n\r\nexport const videosAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n}\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(videoID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(videoID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n","import { LocationsConstants as Constants } from '../types'\r\nimport { locationsApi as api } from '../../api'\r\n\r\nexport const locationsAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n}\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(locationID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(locationID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n","import { TeamConstants as Constants } from '../types'\r\nimport { teamApi as api } from '../../api'\r\n\r\nexport const teamAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n}\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(ID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(ID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n","import { SocialLinksConstants as Constants } from '../types'\r\nimport { socialLinksApi as api } from '../../api'\r\n\r\nexport const socialLinksAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n}\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(linkID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(linkID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n","import { ComponentsConstants as Constants } from '../types'\r\nimport { componentsApi as api } from '../../api'\r\n\r\nexport const componentsAction = {\r\n    get,\r\n    add,\r\n    update,\r\n    remove\r\n}\r\nfunction get() {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._get()\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.GET, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction add(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._add(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.ADD, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\nfunction update(data) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._update(data)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.UPDATE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\nfunction remove(ID) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            api._delete(ID)\r\n                .then(\r\n                    payload => {\r\n                        dispatch(success(payload));\r\n                        resolve(payload)\r\n                    },\r\n                    error => {\r\n                        dispatch(failure('Failed'));\r\n                        reject(error)\r\n                    }\r\n                )\r\n\r\n        });\r\n    }\r\n    function success(payload) { return { type: Constants.DELETE, payload } }\r\n    function failure(error) { return { type: Constants.FAILED, error } }\r\n}\r\n\r\n","export const resources = [\r\n    {\r\n        label: 'Roles',\r\n        name: 'roles',        \r\n        description: '',\r\n        permissions: [\r\n            { name: 'create:any', description: 'User can create roles'},\r\n            { name: 'read:any', description: 'User can see roles'},\r\n            { name: 'update:any', description: 'User can update roles'},\r\n            { name: 'delete:any', description: 'User can remove roles'},\r\n        ]\r\n    },\r\n    {\r\n        label: 'Users',\r\n        name: 'users',\r\n        description: '',\r\n        permissions: [\r\n            { name: 'create:any', description: 'User can create new users'},\r\n            { name: 'read:any', description: 'User can see users'},\r\n            { name: 'update:any', description: 'User can update any user'},\r\n            { name: 'delete:any', description: 'User can remove any user'},\r\n        ]\r\n    },\r\n    {\r\n        label: 'Subjects',\r\n        name: 'subjects',\r\n        description: '',\r\n        permissions: [\r\n            { name: 'create:own', description: 'User can create new subjects'},\r\n            { name: 'read:any', description: 'User can see all subjects'},\r\n            { name: 'read:own', description: 'User can only see assigned subjects'},\r\n            { name: 'update:any', description: 'User can update any subject'},\r\n            { name: 'update:own', description: 'User can update assigned subjects'},\r\n            { name: 'delete:any', description: 'User can remove any subject'},\r\n            { name: 'delete:own', description: 'User can remove own subjects'},\r\n        ]\r\n    },\r\n    {\r\n        label: 'Questions Bank',\r\n        name: 'questions',\r\n        description: '',\r\n        permissions: [\r\n            { name: 'create:own', description: 'User can create new questions'},\r\n            { name: 'read:any', description: 'User can see all questions'},\r\n            { name: 'read:own', description: 'User can only see own questions'},\r\n            { name: 'update:any', description: 'User can update any questions'},\r\n            { name: 'update:own', description: 'User can update own questions'},\r\n            { name: 'delete:any', description: 'User can remove any question'},\r\n            { name: 'delete:own', description: 'User can remove own questions'},\r\n        ]\r\n    },\r\n    {\r\n        label: 'Reports',\r\n        name: 'reports',\r\n        description: '',\r\n        permissions: [\r\n            { name: 'read:any', description: 'User can see all reports'},\r\n            { name: 'read:own', description: 'User can only see own reports'},\r\n        ]\r\n    }\r\n]","export * from './resources'\r\nexport const titleCase = (str) =>{\r\n    return str.replace(\r\n        /\\w\\S*/g,\r\n        function(txt) {\r\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        }\r\n    );\r\n}\r\n\r\nexport const isEmpty = (obj) => {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\nexport const handleResponse = (response) => {\r\n    return response.text()\r\n        .then(async (my_data) => {     \r\n            // console.log(\"<<<<Data>>>\", my_data)\r\n            if(response.status === 500)\r\n            {\r\n                return Promise.reject({error: 'Error 500: Internal Server Error.'})\r\n            }\r\n            if(response.status === 404)\r\n            {\r\n                return Promise.reject({error: 'Error 404: Requested uri does not exist.'})\r\n            }\r\n\r\n            if(response.status === 401)\r\n            {            \r\n                // AppStore.dispatch(AuthActions.logout())\r\n                return Promise.reject('Unauthorised Access')\r\n                \r\n            }\r\n\r\n            if(response.status === 400)\r\n            {                \r\n                const data = my_data && JSON.parse(my_data);\r\n                return Promise.reject(data)\r\n            }\r\n\r\n            const data = my_data && JSON.parse(my_data);\r\n            if (!response.ok) {\r\n                // throw Error(response.statusText);\r\n                const error = (data && data.error) || response.statusText;\r\n                return Promise.reject(error);\r\n            }\r\n\r\n            return data\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        });\r\n}\r\n\r\nexport const requestTimeout = (ms, promise) => {\r\n    return new Promise((resolve, reject) => {\r\n        const timer = setTimeout(() => {\r\n        reject({error:'Server Request Timeout'})\r\n        }, ms)      \r\n        promise\r\n        .then(value => {\r\n            clearTimeout(timer)\r\n            resolve(value)\r\n        })\r\n        .catch(reason => {\r\n            clearTimeout(timer)            \r\n            reject(reason)\r\n        })\r\n    })\r\n}\r\n\r\n","import { AuthConstants as Constants } from '../types'\r\nimport {accessToken} from '../../config.json'\r\n\r\nlet token = sessionStorage.getItem(accessToken)\r\n\r\nconst initialState = {\r\n    user: {},\r\n    loggedIn: false,\r\n    token: token,\r\n};\r\n\r\nexport function authReducer(state = initialState, action) {\r\n    switch (action.type) {  \r\n        case Constants.LOGIN:\r\n            return {\r\n                ...state,\r\n                loggedIn: true,\r\n                token: action.payload.token,\r\n                user: action.payload.user,\r\n            };\r\n            \r\n        case Constants.REFRESH_TOKEN:\r\n            return {\r\n                ...state,\r\n                token: action.payload?.token || null\r\n            }\r\n\r\n        case Constants.REFRESH_TOKEN_FAILED:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                token: null\r\n            }   \r\n\r\n        case Constants.SETPROFILE:\r\n            return{\r\n                ...state,\r\n                user: action.payload.user,\r\n            };\r\n       \r\n        case Constants.LOGOUT:\r\n            return{\r\n                ...state,\r\n                loggedIn: false,\r\n                token: null,\r\n                user: {},\r\n            };\r\n                   \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { RoleConstants as Constants } from '../types'\r\nconst initialState = {\r\n    roles: []\r\n};\r\n\r\nexport function rolesReducer(state = initialState, action) {\r\n    switch (action.type) {  \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                roles: action.payload.roles,\r\n            };\r\n       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                roles: [...state.roles, action.payload.role]\r\n            };\r\n\r\n        case Constants.UPDATE:\r\n            let index = state.roles.findIndex((item) => item._id === action.payload.role._id);\r\n            let itemsArray = [...state.roles];\r\n            if(index > -1)\r\n                itemsArray[index] = action.payload.role\r\n            return {\r\n                ...state,               \r\n                roles: itemsArray\r\n            };\r\n        \r\n                \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                roles: state.roles.filter((item) => item._id !== action.payload.id)\r\n            };\r\n            \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { UserConstants as Constants } from '../types'\r\nconst initialState = {\r\n    users: []\r\n};\r\n\r\nexport function usersReducer(state = initialState, action) {\r\n    switch (action.type) {  \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                users: action.payload.users,\r\n            };\r\n       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                users: [...state.users, action.payload.user]\r\n            };\r\n\r\n        case Constants.UPDATE:\r\n            let index = state.users.findIndex((item) => item._id === action.payload.user._id);\r\n            let itemsArray = [...state.users];\r\n            if(index > -1)\r\n                itemsArray[index] = action.payload.user\r\n            return {\r\n                ...state,               \r\n                users: itemsArray\r\n            };\r\n        \r\n                \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                users: state.users.filter((item) => item._id !== action.payload.id)\r\n            };\r\n            \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { SubjectConstants as Constants } from '../types'\r\nconst initialState = {\r\n    subjects: [],\r\n    classes: [],\r\n    subject: null\r\n};\r\n\r\nexport function subjectsReducer(state = initialState, action) {\r\n    console.log(action)\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                subjects: action.payload.subjects,\r\n            };\r\n\r\n        case Constants.SUBJECT_DETAILS:\r\n            return {\r\n                ...state,               \r\n                subject: action.payload.subject,\r\n            };\r\n\r\n        case Constants.GET_CLASSES:\r\n            return {\r\n                ...state,               \r\n                classes: action.payload.classes,\r\n            };\r\n       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                subjects: [...state.subjects, action.payload.subject]\r\n            };\r\n\r\n        case Constants.ADD_CLASS:\r\n            return {\r\n                ...state,               \r\n                classes: [...state.classes, action.payload.class]\r\n            };\r\n\r\n        case Constants.UPDATE:\r\n            let index = state.subjects.findIndex((item) => item._id === action.payload.subject._id);\r\n            let itemsArray = [...state.subjects];\r\n            if(index > -1)\r\n                itemsArray[index] = action.payload.subject\r\n            return {\r\n                ...state,               \r\n                subjects: itemsArray\r\n            };\r\n\r\n        case Constants.UPDATE_CLASS:\r\n            let class_index = state.classes.findIndex((item) => item._id === action.payload.class._id);\r\n            let classArray = [...state.classes];\r\n            if(class_index > -1)\r\n                classArray[class_index] = action.payload.class\r\n            return {\r\n                ...state,               \r\n                classes: classArray\r\n            };\r\n        \r\n                \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                subjects: state.subjects.filter((item) => item._id !== action.payload.id)\r\n            };\r\n\r\n        case Constants.DELETE_CLASS:\r\n            return {\r\n                ...state,               \r\n                classes: state.classes.filter((item) => item._id !== action.payload.id)\r\n            };\r\n            \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n\r\n        case Constants.CLEAR_SUBJECTS:\r\n            return{\r\n                ...state,\r\n                subjects: null\r\n            }\r\n\r\n        case Constants.CLEAR_SUBJECT:\r\n            return{\r\n                ...state,\r\n                subject: null\r\n            }\r\n        case Constants.ADD_CHAPTER:\r\n            let temp=state.subject;\r\n            temp.chapters.push(action.payload.chapter)\r\n            console.log(\"temp:\",temp)\r\n            return {\r\n                ...state,               \r\n                subject: temp\r\n            };\r\n        case Constants.UPDATE_CHAPTER:\r\n            let tempArr=state.subject;\r\n            tempArr.chapters=tempArr.chapters.map((chapter)=>{\r\n                if(chapter._id===action.payload.Chapter._id)\r\n                chapter=action.payload.Chapter\r\n                return chapter\r\n            })\r\n            return {\r\n                ...state,               \r\n                subject: tempArr\r\n            };\r\n        case Constants.DELETE_CHAPTER:\r\n            let filterArr=state.subject;\r\n            filterArr.chapters=filterArr.chapters.filter((chapter)=> chapter._id!==action.payload.id)\r\n            return {\r\n                ...state,               \r\n                subject: {...filterArr}\r\n            };\r\n        case Constants.ADD_TOPIC:\r\n            let temp_arr=state.subject;\r\n            temp_arr.chapters=temp_arr.chapters.map((chapter)=>{ \r\n                console.log(chapter._id===action.payload.chapterID)\r\n                if(chapter._id===action.payload.chapterID)\r\n                return action.payload.Chapter\r\n                return chapter\r\n                })\r\n            return {\r\n                ...state,               \r\n                subject: temp_arr\r\n            };\r\n        case Constants.UPDATE_TOPIC:\r\n            let update_arr=state.subject;\r\n            update_arr.chapters=update_arr.chapters.map((chapter)=>{ \r\n                console.log(chapter._id===action.payload.chapterID)\r\n                if(chapter._id===action.payload.chapterID)\r\n                return action.payload.Chapter\r\n                return chapter\r\n                })\r\n            return {\r\n                ...state,               \r\n                subject: update_arr\r\n            };\r\n        case Constants.DELETE_TOPIC:\r\n            let arr=state.subject;\r\n            arr.chapters=arr.chapters.map((chapter)=>{ \r\n                if(chapter._id===action.payload.chapterID)\r\n                    chapter.topics=chapter.topics.filter((topic,t)=> topic._id!==action.payload.topicID)\r\n                return chapter       \r\n                })\r\n            return {\r\n                ...state,               \r\n                subject: arr\r\n            };\r\n        case Constants.ADD_CONTENT:\r\n            let content_arr=state.subject;\r\n            content_arr.chapters=content_arr.chapters.map((chapter)=>{ \r\n                if(chapter._id===action.payload.chapterID)\r\n                {\r\n                    chapter.topics=chapter?.topics?.map((topic,t)=>{\r\n                        if(topic._id===action.payload.topicID)\r\n                        topic?.contents?.push(action.payload.content)\r\n                        return topic\r\n                    })\r\n                }\r\n                return chapter\r\n                })\r\n            return {\r\n                ...state,               \r\n                subject: content_arr\r\n            };\r\n        case Constants.DELETE_CONTENT:\r\n            let delete_arr=state.subject;\r\n            delete_arr.chapters=delete_arr.chapters.map((chapter)=>{ \r\n                if(chapter._id===action.payload.chapterID)\r\n                {\r\n                    chapter.topics=chapter?.topics?.map((topic,t)=>{\r\n                        if(topic._id===action.payload.topicID)\r\n                        {\r\n                            topic.contents=topic?.contents?.filter((content)=> content._id!==action.payload.contentID)\r\n                        }\r\n                        return topic\r\n                    })\r\n                }\r\n                return chapter\r\n                })\r\n            return {\r\n                ...state,               \r\n                subject: delete_arr\r\n            };\r\n        case Constants.UPDATE_CONTENT:\r\n            let update_array=state.subject;\r\n            update_array.chapters=update_array.chapters.map((chapter)=>{ \r\n                if(chapter._id===action.payload.chapterID)\r\n                {\r\n                    chapter.topics=chapter?.topics?.map((topic,t)=>{\r\n                        if(topic._id===action.payload.topicID)\r\n                        {\r\n                            topic.contents=topic.contents.map((content)=>{\r\n                                if(content._id===action.payload.content._id)\r\n                                  content=action.payload.content\r\n                                return content\r\n                            })\r\n                        }\r\n                        return topic\r\n                    })\r\n                }\r\n                return chapter\r\n                })\r\n            return {\r\n                ...state,               \r\n                subject: update_array\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import { ClassesConstants as Constants } from '../types'\r\nconst initialState = {\r\n    classes: []\r\n};\r\n\r\nexport function classesReducer(state = initialState, action) {\r\n    switch (action.type) {  \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                classes: action.payload.classes,\r\n            };\r\n       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                classes: [...state.classes, action.payload.class]\r\n            };\r\n\r\n        case Constants.UPDATE:\r\n            let index = state.classes.findIndex((item) => item._id === action.payload.class._id);\r\n            let itemsArray = [...state.classes];\r\n            if(index > -1)\r\n                itemsArray[index] = action.payload.class\r\n            return {\r\n                ...state,               \r\n                classes: itemsArray\r\n            };\r\n        \r\n                \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                classes: state.classes.filter((item) => item._id !== action.payload.id)\r\n            };\r\n            \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { ContentsConstants as Constants } from '../types'\r\nconst initialState = {\r\n    contents: []\r\n};\r\n\r\nexport function contentsReducer(state = initialState, action) {\r\n    switch (action.type) {  \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                contents: action.payload.Contents,\r\n            };\r\n       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                contents: [...state.contents,action.payload.content]\r\n            };\r\n\r\n        case Constants.UPDATE:\r\n            let index = state.contents.findIndex((item) => item._id === action.payload.Content._id);\r\n            let itemsArray = [...state.contents];\r\n            if(index > -1)\r\n                itemsArray[index] = action.payload.Content\r\n            return {\r\n                ...state,               \r\n                contents: itemsArray\r\n            };\r\n        \r\n                \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                contents: state.contents.filter((item) => item._id !== action.payload.Content)\r\n            };\r\n            \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { QuestionBankConstants as Constants } from '../types'\r\nconst initialState = {\r\n    questionBankTagQuestions: [],\r\n    quizQuestions:[]\r\n};\r\n\r\nexport function questionBankReducer(state = initialState, action) {\r\n    switch (action.type) {  \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                quizQuestions: action.payload.questions,\r\n            };\r\n        case Constants.GETBYTAGS:\r\n            return {\r\n                ...state,               \r\n                questionBankTagQuestions: action.payload.questions,\r\n            };\r\n        case Constants.CLEAR:\r\n            return {\r\n                ...state,\r\n                questionBankTagQuestions: []\r\n            }\r\n       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                quizQuestions: [...state.quizQuestions,action.payload.questions]\r\n            };\r\n\r\n        case Constants.UPDATE:\r\n            let index = state.questionBank.findIndex((item) => item._id === action.payload.Content._id);\r\n            let itemsArray = [...state.questionBank];\r\n            if(index > -1)\r\n                itemsArray[index] = action.payload.Content\r\n            return {\r\n                ...state,               \r\n                questionBank: itemsArray\r\n            };\r\n        \r\n                \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                questionBank: state.questionBank.filter((item) => item._id !== action.payload.Content)\r\n            };\r\n            \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { GalleryConstants as Constants } from '../types'\r\nconst initialState = {\r\n    gallerys:[]\r\n};\r\n\r\nexport function galleryReducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                gallerys: action.payload.gallerys,\r\n            };       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                gallerys: [...state.gallerys, action.payload.gallery]\r\n            };\r\n        case Constants.ADDGALLERYIMAGE:\r\n            state.gallerys=state.gallerys.map((gallery)=>{\r\n                if(gallery._id===action.payload.gallery._id)\r\n                gallery=action.payload.gallery\r\n                return gallery\r\n            })\r\n            return {\r\n                ...state,               \r\n                gallerys: [...state.gallerys]\r\n            };\r\n        case Constants.UPDATE:\r\n            state.gallerys=state.gallerys.map((gallery)=>{\r\n                if(gallery._id===action.payload.gallery._id)\r\n                gallery=action.payload.gallery\r\n                return gallery\r\n            })\r\n            return {\r\n                ...state,               \r\n                gallerys:state.gallerys\r\n            };            \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                gallerys: state.gallerys.filter((gallery) => gallery._id !== action.payload.galleryID)\r\n            };    \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { NewsConstants as Constants } from '../types'\r\nconst initialState = {\r\n    newses:[]\r\n};\r\n\r\nexport function newsReducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                newses: action.payload.newses,\r\n            };       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                newses: [...state.newses, action.payload.news]\r\n            };\r\n        case Constants.UPDATE:\r\n            state.newses=state.newses.map((news)=>{\r\n                if(news._id===action.payload.news._id)\r\n                news=action.payload.news\r\n                return news\r\n            })\r\n            return {\r\n                ...state,               \r\n                newses:state.newses\r\n            };         \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                newses: state.newses.filter((news) => news._id !== action.payload.newsID)\r\n            };    \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { HeadlineConstants as Constants } from '../types'\r\nconst initialState = {\r\n    headlines:[]\r\n};\r\n\r\nexport function headlineReducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                headlines: action.payload.headlines,\r\n            };       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                headlines: [...state.headlines, action.payload.headline]\r\n            };\r\n        case Constants.UPDATE:\r\n            state.headlines=state.headlines.map((headline)=>{\r\n                if(headline._id===action.payload.headline._id)\r\n                headline=action.payload.headline\r\n                return headline\r\n            })\r\n            return {\r\n                ...state,               \r\n                headlines:state.headlines\r\n            };         \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                headlines: state.headlines.filter((headline) => headline._id !== action.payload.headlineID)\r\n            };    \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { TendersConstants as Constants } from '../types'\r\nconst initialState = {\r\n    tenders:[]\r\n};\r\n\r\nexport function tendersReducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                tenders: action.payload.tenders,\r\n            };       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                tenders: [...state.tenders, action.payload.tender]\r\n            };\r\n        case Constants.UPDATE:\r\n            state.tenders=state.tenders.map((tender)=>{\r\n                if(tender._id===action.payload.tender._id)\r\n                tender=action.payload.tender\r\n                return tender\r\n            })\r\n            return {\r\n                ...state,               \r\n                tenders:state.tenders\r\n            };         \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                tenders: state.tenders.filter((tender) => tender._id !== action.payload.tenderID)\r\n            };    \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { JobsConstants as Constants } from '../types'\r\nconst initialState = {\r\n    jobs:[]\r\n};\r\n\r\nexport function jobsReducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                jobs: action.payload.jobs,\r\n            };       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                jobs: [...state.jobs, action.payload.job]\r\n            };\r\n        case Constants.UPDATE:\r\n            state.jobs=state.jobs.map((job)=>{\r\n                if(job._id===action.payload.job._id)\r\n                job=action.payload.job\r\n                return job\r\n            })\r\n            return {\r\n                ...state,               \r\n                jobs:state.jobs\r\n            };         \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                jobs: state.jobs.filter((job) => job._id !== action.payload.jobID)\r\n            };    \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { DownloadsConstants as Constants } from '../types'\r\nconst initialState = {\r\n    downloads:[]\r\n};\r\n\r\nexport function downloadsReducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                downloads: action.payload.downloads,\r\n            };       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                downloads: [...state.downloads, action.payload.download]\r\n            };\r\n        case Constants.UPDATE:\r\n            state.downloads=state.downloads.map((download)=>{\r\n                if(download._id===action.payload.download._id)\r\n                download=action.payload.download\r\n                return download\r\n            })\r\n            return {\r\n                ...state,               \r\n                downloads:state.downloads\r\n            };         \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                downloads: state.downloads.filter((download) => download._id !== action.payload.downloadID)\r\n            };    \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { LinksConstants as Constants } from '../types'\r\nconst initialState = {\r\n    links:[]\r\n};\r\n\r\nexport function linksReducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                links: action.payload.links,\r\n            };       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                links: [...state.links, action.payload.link]\r\n            };\r\n        case Constants.UPDATE:\r\n            state.links=state.links.map((link)=>{\r\n                if(link._id===action.payload.link._id)\r\n                link=action.payload.link\r\n                return link\r\n            })\r\n            return {\r\n                ...state,               \r\n                links:state.links\r\n            };         \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                links: state.links.filter((link) => link._id !== action.payload.linkID)\r\n            };    \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { SliderConstants as Constants } from '../types'\r\nconst initialState = {\r\n    slider:[]\r\n};\r\n\r\nexport function sliderReducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                slider: action.payload.slider,\r\n            };       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                slider: [...state.slider, action.payload.slide]\r\n            };\r\n        case Constants.UPDATE:\r\n            state.slider=state.slider.map((slide)=>{\r\n                if(slide._id===action.payload.slide._id)\r\n                slide=action.payload.slide\r\n                return slide\r\n            })\r\n            return {\r\n                ...state,               \r\n                slider:state.slider\r\n            };         \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                slider: state.slider.filter((slide) => slide._id !== action.payload.slideID)\r\n            };    \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { VideosConstants as Constants } from '../types'\r\nconst initialState = {\r\n    videos:[]\r\n};\r\n\r\nexport function videosReducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                videos: action.payload.videos,\r\n            };       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                videos: [...state.videos, action.payload.video]\r\n            };\r\n        case Constants.UPDATE:\r\n            state.videos=state.videos.map((video)=>{\r\n                if(video._id===action.payload.video._id)\r\n                video=action.payload.video\r\n                return video\r\n            })\r\n            return {\r\n                ...state,               \r\n                videos:state.videos\r\n            };         \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                videos: state.videos.filter((video) => video._id !== action.payload.videoID)\r\n            };    \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { LocationsConstants as Constants } from '../types'\r\nconst initialState = {\r\n    locations:[]\r\n};\r\n\r\nexport function locationsReducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                locations: action.payload.locations,\r\n            };       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                locations: [...state.locations, action.payload.location]\r\n            };\r\n        case Constants.UPDATE:\r\n            state.locations=state.locations.map((location)=>{\r\n                if(location._id===action.payload.location._id)\r\n                location=action.payload.location\r\n                return location\r\n            })\r\n            return {\r\n                ...state,               \r\n                locations:state.locations\r\n            };         \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                locations: state.locations.filter((location) => location._id !== action.payload.locationID)\r\n            };    \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { TeamConstants as Constants } from '../types'\r\nconst initialState = {\r\n    team:[]\r\n};\r\n\r\nexport function teamReducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                team: action.payload.team,\r\n            };       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                team: [...state.team, action.payload.team]\r\n            };\r\n        case Constants.UPDATE:\r\n            state.team=state.team.map((team)=>{\r\n                if(team._id===action.payload.team._id)\r\n                team=action.payload.team\r\n                return team\r\n            })\r\n            return {\r\n                ...state,               \r\n                team:state.team\r\n            };         \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                team: state.team.filter((team) => team._id !== action.payload._id)\r\n            };    \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { SocialLinksConstants as Constants } from '../types'\r\nconst initialState = {\r\n    socialLinks:[]\r\n};\r\n\r\nexport function socialLinksReducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                socialLinks: action.payload.links,\r\n            };       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                socialLinks: [...state.socialLinks, action.payload.link]\r\n            };\r\n        case Constants.UPDATE:\r\n            state.socialLinks=state.socialLinks.map((link)=>{\r\n                if(link._id===action.payload.link._id)\r\n                link=action.payload.link\r\n                return link\r\n            })\r\n            return {\r\n                ...state,               \r\n                socialLinks:state.socialLinks\r\n            };         \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                socialLinks: state.socialLinks.filter((link) => link._id !== action.payload.linkID)\r\n            };    \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ComponentsConstants as Constants } from '../types'\r\nconst initialState = {\r\n    components:[]\r\n};\r\n\r\nexport function componentsReducer(state = initialState, action) {\r\n    switch (action.type) { \r\n        case Constants.GET:\r\n            return {\r\n                ...state,               \r\n                components: action.payload.components,\r\n            };       \r\n        case Constants.ADD:\r\n            return {\r\n                ...state,               \r\n                components: [...state.components, action.payload.component]\r\n            };\r\n        case Constants.UPDATE:\r\n            state.components=state.components.map((component)=>{\r\n                if(component._id===action.payload.component._id)\r\n                component=action.payload.component\r\n                return component\r\n            })\r\n            return {\r\n                ...state,               \r\n                components:state.components\r\n            };         \r\n        case Constants.DELETE:\r\n            return {\r\n                ...state,               \r\n                components: state.components.filter((component) => component._id !== action.payload._id)\r\n            };    \r\n        case Constants.FAILED:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { authReducer } from './auth.reducer';\r\nimport { rolesReducer } from './roles.reducer';\r\nimport { usersReducer } from './users.reducer';\r\nimport {subjectsReducer} from './subjects.reducer'\r\nimport {classesReducer} from './classes.reducer'\r\nimport { contentsReducer } from './contents.reducer';\r\nimport { questionBankReducer } from './questionBank.reducer';\r\nimport { galleryReducer } from './gallery.reducer';\r\nimport {newsReducer} from './news.reducer'\r\nimport { headlineReducer } from './headline.reducer';\r\nimport { tendersReducer } from './tenders.reducer';\r\nimport { jobsReducer } from './jobs.reducer';\r\nimport {downloadsReducer} from './downloads.reducer'\r\nimport { linksReducer } from './links.reducer';\r\nimport { sliderReducer } from './slider.reducer';\r\nimport { videosReducer } from './videos.reducer';\r\nimport { locationsReducer } from './locations.reducer';\r\nimport { teamReducer } from './team.reducer';\r\nimport { socialLinksReducer } from './socialLinks.reducer';\r\nimport {componentsReducer} from './components.reducer'\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    users: usersReducer,\r\n    roles: rolesReducer,\r\n    subjects: subjectsReducer,\r\n    classes:classesReducer,\r\n    contents:contentsReducer,\r\n    questionBank:questionBankReducer,\r\n    gallery:galleryReducer,\r\n    newses:newsReducer,\r\n    headlines:headlineReducer,\r\n    tenders:tendersReducer,\r\n    jobs:jobsReducer,\r\n    downloads:downloadsReducer,\r\n    links:linksReducer,\r\n    slider:sliderReducer,\r\n    videos:videosReducer,\r\n    locations:locationsReducer,\r\n    team:teamReducer,\r\n    socialLinks:socialLinksReducer,\r\n    components:componentsReducer\r\n});\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport appReducer from './reducers'\r\nimport {tokenName, storageKey} from '../config.json'\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\n\r\n\r\nconst persistConfig = {\r\n    key: storageKey,\r\n    storage,\r\n}\r\nexport const rootReducer = (state, action) => {\r\n    if (action.type === 'USER_LOGOUT') {\r\n        storage.removeItem('persist:'+storageKey)\r\n        localStorage.removeItem(tokenName)\r\n        state = initialState;\r\n        window.location = '/login'\r\n    }  \r\n    return appReducer(state, action)\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n\r\nconst AppStore = createStore(\r\n    persistedReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)\r\n    )\r\n);\r\n\r\nlet persistor = persistStore(AppStore)\r\nexport { AppStore, persistor };","import React from 'react'\r\nimport { chakra, shouldForwardProp } from \"@chakra-ui/react\"\r\n\r\nconst BaseIcon = React.forwardRef((props, ref) => {\r\n\r\n    var iconProps = {        \r\n        ...({className: `${'icon ion-'+props.name +' '+props.className}`}),\r\n        ...(props.onClick && {onClick: props.onClick})\r\n      };\r\n      \r\n    return(\r\n        <i {...iconProps} ref={ref}  />\r\n    )\r\n\r\n})\r\n\r\nconst Icon = chakra(BaseIcon, {\r\n        shouldForwardProp: (prop) => {\r\n                const isChakraProp = !shouldForwardProp(prop)\r\n                if (isChakraProp) return false\r\n                return [\"name\", \"onClick\"].includes(prop)\r\n            },\r\n            baseStyle: (props) => {\r\n                return({\r\n                    color: props.color || 'gray.400',\r\n                    fontSize: props.fontSize || \"md\",\r\n                    cursor:'pointer'                    \r\n                })\r\n            }\r\n        })\r\n    \r\nexport {Icon}","import React from 'react'\r\nimport {Box, Spinner, Fade } from '@chakra-ui/react'\r\n\r\nexport const Splash = () => {\r\n    return (\r\n        <Fade in={true}>\r\n        <Box \r\n            d=\"flex\" \r\n            minH={'100vh'} \r\n            alignItems=\"center\" \r\n            justifyContent=\"center\" \r\n            bg=\"gray.900\" \r\n            bgImage='./assets/auth-bg.svg' \r\n            bgSize=\"cover\" \r\n            bgAttachment=\"fixed\"\r\n        >\r\n            <Spinner\r\n                thickness=\"2px\"\r\n                speed=\"0.65s\"\r\n                emptyColor=\"gray.100\"\r\n                color=\"brand.300\"\r\n                size=\"xl\"\r\n            />\r\n        </Box>\r\n        </Fade>\r\n    )\r\n    \r\n}","import React from \"react\";\r\nimport {Box, Spinner} from '@chakra-ui/react'\r\n\r\nexport const Loader = (props) => {\r\n    return(\r\n        <Box \r\n            w=\"100%\"\r\n            h='100vh'\r\n            position=\"fixed\"\r\n            left=\"0\"\r\n            top=\"0\"\r\n            bg=\"rgba(248, 242, 237,0.3)\"\r\n            zIndex=\"99\"\r\n            className=\"center\"\r\n        >\r\n            <Spinner size=\"lg\" />\r\n        </Box>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { \r\n    Drawer as ChakraDrawer, DrawerBody, DrawerContent, \r\n    DrawerOverlay, DrawerCloseButton, DrawerHeader, \r\n    DrawerFooter \r\n} from '@chakra-ui/react'\r\n\r\n\r\nconst Drawer = (props) => {\r\n\r\n    const modalRef= React.createRef()\r\n    let {open, size, onClose, bg, transition, closeable=true, footer, title, placement} = props\r\n    return(\r\n        <ChakraDrawer \r\n            isOpen={open || false} \r\n            size={size || \"lg\"}  \r\n            onClose={onClose} \r\n            motionPreset={transition || \"slideInRight\"}\r\n            autoFocus={false}\r\n            initialFocusRef={modalRef}\r\n            placement={placement || \"right\"}\r\n            blockScrollOnMount={false}\r\n            closeOnOverlayClick={closeable}\r\n            closeOnEsc={closeable}\r\n            >\r\n            <DrawerOverlay />\r\n            <DrawerContent>\r\n                <DrawerHeader bg=\"transparent\">{title}</DrawerHeader>\r\n                {\r\n                    closeable && <DrawerCloseButton _focus={{ outline: \"none\" }} />\r\n                }\r\n                \r\n                <DrawerBody p={props.p}   bg={bg || 'white'}>\r\n                    {props.children}\r\n                </DrawerBody>\r\n                {\r\n                    footer &&\r\n                    <DrawerFooter>\r\n                        {footer}\r\n                    </DrawerFooter>\r\n                }\r\n                \r\n                <div ref={modalRef}/>\r\n            </DrawerContent>    \r\n        </ChakraDrawer>\r\n    )\r\n}\r\n\r\nexport {Drawer}","import React from 'react'\r\nimport { Switch as ChakraSwitch, Box, FormControl } from \"@chakra-ui/react\"\r\n\r\nconst Switch = ({label, ...props}) => {\r\n\r\n    return(\r\n        <FormControl>            \r\n            <label>\r\n                <Box my=\"3\" display=\"flex\" alignItems=\"center\">                    \r\n                    <ChakraSwitch isFocusable={false} colorScheme=\"brand\" {...props} mr=\"3\" />\r\n                    {label}\r\n                </Box>\r\n            </label>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport {Switch}","import React from 'react'\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    Input as ChakraInput,\r\n    Textarea,\r\n    FormErrorMessage,\r\n    HStack,\r\n    Text,\r\n    Button,\r\n  } from \"@chakra-ui/react\"\r\nimport {Icon} from './Icon'\r\n  \r\nconst Input = React.forwardRef( ({error, label, textarea = false,date=false,file=false,leftLabel=false, ...props}, ref) => {\r\n    return(\r\n        <FormControl isInvalid={error}>\r\n            {label && <FormLabel>{label}</FormLabel>}            \r\n            { \r\n              textarea ? <Textarea {...props} ref={ref} /> :\r\n              date ? <Input type='date' {...props} ref={ref} /> :\r\n              file ?  \r\n                <>\r\n                <Button  variant=\"outline\" rounded=\"sm\" onClick={props.onClick} size=\"sm\" leftIcon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"md-cloud-upload\" />}>Upload File</Button>         \r\n                <Text>{props?.fileName}</Text>\r\n                <Input type='file' {...props} ref={ref} />\r\n                </> \r\n              :\r\n              leftLabel?\r\n                <HStack>\r\n                  <Text>{leftLabel}</Text>\r\n                  <ChakraInput {...props} ref={ref} />\r\n                </HStack>\r\n              :\r\n              <ChakraInput {...props} ref={ref} />}            \r\n            <FormErrorMessage>{error}</FormErrorMessage>\r\n        </FormControl>\r\n    )\r\n})\r\nexport {Input}","import React from 'react'\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    Select as ChakraInput,    \r\n    FormErrorMessage,\r\n  } from \"@chakra-ui/react\"\r\n  \r\nconst Select = ({error, label, children, ...props}) => {\r\n    return(\r\n        <FormControl isInvalid={error}>\r\n            {label && <FormLabel>{label}</FormLabel>}            \r\n            <ChakraInput {...props}>{children}</ChakraInput>\r\n\r\n            <FormErrorMessage>{error}</FormErrorMessage>\r\n        </FormControl>\r\n    )\r\n}\r\nexport {Select}","import React from 'react'\r\nimport { Alert as ChakraAlert, AlertIcon, AlertTitle, AlertDescription} from '@chakra-ui/react'\r\n\r\nconst Alert = ({ children, center, title,  status, ...props}) => {\r\n\r\n    return(\r\n        <ChakraAlert status={status || 'info'}  {...props} {...(center) && { flexDirection:'column', alignItems: 'center', justifyContent: 'center'} }>\r\n            <AlertIcon {...center && {boxSize: '40px'} } />\r\n            {\r\n                title &&\r\n                <AlertTitle mt=\"4\">{title}</AlertTitle>\r\n            }\r\n            <AlertDescription>\r\n                {children}\r\n            </AlertDescription>\r\n        </ChakraAlert>\r\n    )\r\n}\r\n\r\nexport { Alert }","import React from 'react'\r\nimport {\r\n    Popover as ChakraPopover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverBody,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n  } from '@chakra-ui/react'\r\n\r\n  const Popover=React.forwardRef(({title, actions, placement, children,...props}, ref) => {\r\n      return(\r\n            <ChakraPopover innerRef={ref} placement={placement || 'right'}>\r\n                <PopoverTrigger>\r\n                    {children}\r\n                </PopoverTrigger>\r\n                <PopoverContent _focus={{ outline: 'none'}} rounded=\"0\">\r\n                    <PopoverArrow />\r\n                    <PopoverCloseButton />\r\n                    {\r\n                        title && <PopoverHeader fontSize=\"sm\" fontWeight=\"bold\">{title}</PopoverHeader>\r\n                    }            \r\n                    <PopoverBody>\r\n                        {actions}\r\n                    </PopoverBody>\r\n                </PopoverContent>\r\n            </ChakraPopover>\r\n    )\r\n})\r\n\r\nexport { Popover}","import React from 'react'\r\nimport { Switch as ChakraSwitch,FormLabel, FormControl, HStack,VStack } from \"@chakra-ui/react\"\r\nimport { Input } from '@chakra-ui/react'\r\nconst QSwitch = ({label,input=false,radio=false, ...props}) => {\r\n\r\n    return(\r\n        <FormControl>                             \r\n            <HStack alignItems='flex-start' spacing={1}>\r\n                {radio && <ChakraSwitch isFocusable={false} colorScheme=\"brand\" pt={1} value={props.value} onChange={props.onChange} size='md' mr=\"3\" />}\r\n                <VStack alignItems='flex-start'>\r\n                    {\r\n                        label && <FormLabel m={0}>{label}</FormLabel>\r\n                    }   \r\n                    {\r\n                        input && <Input w='80px' size='sm' onChange={props.onChange} value={props.value} placeholder={props.placeholder}/>\r\n                    }\r\n                </VStack>\r\n            </HStack>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport {QSwitch}","import React from 'react'\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n  } from \"@chakra-ui/react\"\r\nimport ReactQuill from 'react-quill';\r\nimport \"../../node_modules/react-quill/dist/quill.snow.css\"\r\nconst TextEditor = React.forwardRef( ({error, label,  ...props}, ref) => {\r\n    return(\r\n        <FormControl isInvalid={error} >\r\n            {label && <FormLabel>{label}</FormLabel>}            \r\n            <ReactQuill {...props} innerRef={ref}/>            \r\n            <FormErrorMessage>{error}</FormErrorMessage>\r\n        </FormControl>\r\n    )\r\n})\r\nexport {TextEditor}","import { useRadio,useRadioGroup,Box, HStack } from '@chakra-ui/react'\r\nfunction RadioCard(props) {\r\n    const { getInputProps, getCheckboxProps } = useRadio(props)\r\n  \r\n    const input = getInputProps()\r\n    const checkbox = getCheckboxProps()\r\n  \r\n    return (\r\n      <Box as='label'>\r\n        <input {...input} />\r\n        <Box\r\n          {...checkbox}\r\n          cursor='pointer'\r\n          borderWidth='thin'\r\n          borderRadius='sm'\r\n          boxShadow='sm'\r\n          _checked={{\r\n            bg: 'brand.500',\r\n            color: 'white',\r\n            borderColor: 'brand.500',\r\n          }}\r\n          py={1}\r\n          px={3}\r\n        >\r\n          {props.children}\r\n        </Box>\r\n      </Box>\r\n    )\r\n  }\r\n  function Level(props) {\r\n    const options = ['EASY', 'MEDIUM', 'HARD']\r\n  \r\n    const { getRootProps, getRadioProps } = useRadioGroup({\r\n      name:'level',\r\n      defaultValue: 'EASY',\r\n      onChange:props.onChange,\r\n    })\r\n  \r\n    const group = getRootProps()\r\n  \r\n    return (\r\n      <HStack {...group}>\r\n        {options.map((value) => {\r\n          const radio = getRadioProps({ value })\r\n          return (\r\n            <RadioCard key={value} {...radio}>\r\n              {value}\r\n            </RadioCard>\r\n          )\r\n        })}\r\n      </HStack>\r\n    )\r\n  }\r\n  \r\nexport {Level}"],"sourceRoot":""}