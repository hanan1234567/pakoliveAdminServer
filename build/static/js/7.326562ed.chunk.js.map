{"version":3,"sources":["pages/auth/ForgetPassword.js"],"names":["ForgetPassword","props","useState","state","setState","useBoolean","loading","setLoading","toast","useToast","d","h","minH","bg","flex","flexDir","justifyContent","p","w","maxW","mx","src","mb","size","my","onSubmit","e","preventDefault","on","authApi","_forget_password","then","res","off","title","description","message","status","position","duration","isClosable","catch","err","console","log","id","direction","isInvalid","pointerEvents","children","name","type","onChange","value","target","placeholder","pt","px","form","isLoading","loadingText","variant","as","Link","to","colorScheme","base","lg","md","alignItems","color"],"mappings":"wQAsGeA,UA1FQ,SAACC,GAAW,IAAD,EACJC,mBAAS,IADL,mBACvBC,EADuB,KAChBC,EADgB,OAEAC,cAFA,mBAEvBC,EAFuB,KAEdC,EAFc,KAGxBC,EAAQC,cAsCd,OACI,eAAC,IAAD,CACIC,EAAE,OACFC,EAAE,QACFC,KAAK,QAGLC,GAAG,QANP,UAYI,cAAC,IAAD,CAAKC,KAAK,IAAIJ,EAAE,OAAOC,EAAE,OAAOI,QAAQ,SAASC,eAAe,SAAhE,SACI,eAAC,IAAD,CAAKC,EAAE,KAAKC,EAAE,OAAOC,KAAK,QAAQC,GAAG,OAArC,UACI,cAAC,IAAD,CAAOC,IAAI,mCAAmCV,EAAE,OAAOW,GAAG,KAAKJ,EAAE,SACjE,cAAC,IAAD,CAASK,KAAK,KAAKC,GAAG,IAAtB,6BACA,cAAC,IAAD,CAAMF,GAAG,IAAT,sEACA,sBAAMG,SA/CD,SAACC,GAClBA,EAAEC,iBACFpB,EAAWqB,KACXC,IAAQC,iBAAiB3B,GACpB4B,MAAK,SAACC,GACHzB,EAAW0B,MACXzB,EAAM,CACF0B,MAAO,GACPC,YAAaH,EAAII,QACjBC,OAAQ,UACRC,SAAU,MACVC,SAAU,IACVC,YAAY,OAGnBC,OAAM,SAACC,GACJnC,EAAW0B,MACXU,QAAQC,IAAI,QAASF,OA8BaG,GAAG,aAAjC,SACI,eAAC,IAAD,CAAOC,UAAU,SAAjB,UACI,eAAC,IAAD,CAAaC,WAAW,EAAOzB,GAAI,EAAnC,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACI0B,cAAc,OACdC,SAAU,cAAC,IAAD,CAAMC,KAAK,gBAEzB,cAAC,IAAD,CAAQC,KAAK,QAAQC,SAAU,SAAC1B,GAAD,OA9DpCwB,EA8D6D,QA9DvDG,EA8DgE3B,EAAE4B,OAAOD,WA7DtGjD,EAAS,2BACFD,GADC,kBAEH+C,EAAOG,KAHU,IAACH,EAAMG,GA8DiFE,YAAY,qBAElG,cAAC,IAAD,+CAKJ,eAAC,IAAD,CAAOT,UAAU,MAAMU,GAAG,IAAIxC,eAAe,gBAA7C,UACI,cAAC,IAAD,CAAQyC,GAAI,EAAGN,KAAK,SAASO,KAAK,aAAaC,UAAWrD,EAAUsD,YAAY,iBAAhF,oBACA,cAAC,IAAD,CAAQC,QAAQ,OAAOC,GAAIC,IAAMC,GAAG,IAAIC,YAAY,OAApD,qCAOpB,cAAC,IAAD,CAAKnD,KAAK,IAAIJ,EAAG,CAAEwD,KAAM,OAAQC,GAAI,OAAQC,GAAI,QAAUC,WAAW,SAASrD,eAAe,SAASE,EAAE,OAAOP,EAAE,OAAOE,GAAG,YAA5H,SACI,cAAC,IAAD,CAASU,KAAK,KAAK+C,MAAM,QAAzB","file":"static/js/7.326562ed.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Box, Stack, \r\n    Heading, Button, FormControl,\r\n    FormErrorMessage, Image,\r\n    Input, InputGroup, InputLeftElement,\r\n    useBoolean, useToast, Text\r\n} from '@chakra-ui/react'\r\nimport { authApi } from '../../api'\r\nimport {Icon} from '../../ui-elements'\r\n\r\nconst ForgetPassword = (props) => {\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useBoolean()\r\n    const toast = useToast()\r\n\r\n    const handleInputChange = (name, value) => {\r\n        setState({\r\n            ...state,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setLoading.on()\r\n        authApi._forget_password(state)\r\n            .then((res) => {\r\n                setLoading.off()\r\n                toast({\r\n                    title: \"\",\r\n                    description: res.message,\r\n                    status: \"success\",\r\n                    position: \"top\",\r\n                    duration: 9000,\r\n                    isClosable: true,\r\n                  })\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n                console.log(\"Error\", err)\r\n                // toast({\r\n                //     title: \"Error!\",\r\n                //     description: err.error,\r\n                //     status: \"error\",\r\n                //     position: \"top\",\r\n                //     duration: 9000,\r\n                //     isClosable: true,\r\n                //   })\r\n            })\r\n\r\n    }\r\n    return(\r\n        <Box \r\n            d=\"flex\" \r\n            h=\"100vh\"\r\n            minH='100vh'\r\n            // alignItems=\"center\" \r\n            // justifyContent=\"center\" \r\n            bg=\"white\"\r\n            // bgImage='./assets/auth-bg.svg' \r\n            // bgSize=\"cover\" \r\n            // bgAttachment=\"fixed\"\r\n            >\r\n            {/* <Box w=\"100%\" maxW=\"500px\" flexDir=\"column\" h=\"100%\" d=\"flex\" justifyContent=\"center\"> */}\r\n            <Box flex=\"1\" d=\"flex\" h=\"100%\" flexDir=\"column\" justifyContent=\"center\">\r\n                <Box p=\"10\" w=\"100%\" maxW=\"440px\" mx=\"auto\">\r\n                    <Image src=\"/images/insaf-academy-logo-h.svg\" h=\"90px\" mb=\"10\" w=\"auto\" />\r\n                    <Heading size=\"md\" my=\"3\">Forget Password</Heading>\r\n                    <Text mb=\"5\">Please enter email address below to reset your password.</Text>\r\n                    <form onSubmit={handleSubmit} id=\"reset-form\">\r\n                        <Stack direction=\"column\">                                \r\n                            <FormControl isInvalid={false} mb={3}>                                    \r\n                                <InputGroup>\r\n                                    <InputLeftElement \r\n                                        pointerEvents=\"none\"\r\n                                        children={<Icon name=\"md-person\" />}\r\n                                    />                                \r\n                                    <Input  type=\"email\" onChange={(e) => handleInputChange('email', e.target.value)} placeholder=\"Email Address\" />\r\n                                </InputGroup>\r\n                                <FormErrorMessage>We'll never share your email.</FormErrorMessage>\r\n                            </FormControl>\r\n\r\n                            \r\n                            \r\n                            <Stack direction=\"row\" pt=\"5\" justifyContent=\"space-between\">\r\n                                <Button px={7} type=\"submit\" form=\"reset-form\" isLoading={loading}  loadingText=\"Please wait...\">Submit</Button>\r\n                                <Button variant=\"link\" as={Link} to=\"/\" colorScheme=\"blue\">Login Here</Button>\r\n                            </Stack>\r\n\r\n                        </Stack>\r\n                    </form>\r\n                </Box>\r\n            </Box>\r\n            <Box flex=\"2\" d={{ base: 'none', lg: \"flex\", md: 'none' }} alignItems=\"center\" justifyContent=\"center\" w=\"100%\" h=\"100%\" bg=\"brand.500\">\r\n                <Heading size=\"lg\" color=\"white\">Insaf Academy Portal</Heading>\r\n            </Box>                  \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ForgetPassword\r\n\r\n\r\n"],"sourceRoot":""}