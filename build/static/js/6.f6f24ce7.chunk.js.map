{"version":3,"sources":["pages/auth/index.js"],"names":["Login","useState","show","setShow","email","password","state","setState","useBoolean","loading","setLoading","auth","useAuth","toast","useToast","handleInputChange","name","value","spacing","w","h","className","alignItems","isInvalid","pointerEvents","children","type","onChange","e","target","placeholder","onClick","px","form","rounded","isLoading","loadingText","preventDefault","on","login","then","res","off","catch","err","console","log","title","description","error","status","position","duration","isClosable","variant","as","Link","to","colorScheme","src","mb","alt"],"mappings":"wSAoFeA,UA5ED,WAAO,IAAD,EACQC,oBAAS,GADjB,mBACTC,EADS,KACHC,EADG,OAEUF,mBAAS,CAACG,MAAM,yBAAyBC,SAAS,cAF5D,mBAETC,EAFS,KAEFC,EAFE,OAGcC,cAHd,mBAGTC,EAHS,KAGAC,EAHA,KAIVC,EAAOC,cACPC,EAAQC,cAERC,EAAoB,SAACC,EAAMC,GAC7BV,EAAS,2BACFD,GADC,kBAEHU,EAAOC,MAyBhB,OACQ,eAAC,IAAD,CAAQC,QAAS,EAAjB,UACI,cAAC,IAAD,CAAQC,EAAE,MAAMC,EAAE,QAAQC,UAAU,SAApC,SACI,eAAC,IAAD,CAAQC,WAAW,aAAaH,EAAE,QAAQD,QAAS,EAAnD,UACQ,eAAC,IAAD,CAAaK,WAAW,EAAxB,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,cAAc,OACdC,SAAU,cAAC,IAAD,CAAMT,KAAK,gBAEzB,cAAC,IAAD,CAAQU,KAAK,QAAQC,SAAU,SAACC,GAAD,OAAOb,EAAkB,QAASa,EAAEC,OAAOZ,QAAQa,YAAY,qBAElG,cAAC,IAAD,+CAEJ,eAAC,IAAD,CAAaP,WAAW,EAAxB,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,cAAc,OACdC,SAAU,cAAC,IAAD,CAAMT,KAAK,aAEzB,cAAC,IAAD,CAAOU,KAAMxB,EAAO,OAAS,WAAYyB,SAAU,SAACC,GAAD,OAAOb,EAAkB,WAAYa,EAAEC,OAAOZ,QAAQa,YAAY,aACrH,cAAC,IAAD,UACI,cAAC,IAAD,CAAMd,KAAMd,EAAO,aAAe,SAAU6B,QAAS,kBAAM5B,GAASD,WAG5E,cAAC,IAAD,+CAEJ,eAAC,IAAD,CAAQiB,EAAE,OAAV,UACI,cAAC,IAAD,CAAQa,GAAI,EAAGN,KAAK,SAASO,KAAK,aAAaC,QAAQ,KAAKC,UAAW1B,EAAU2B,YAAY,iBAAiBL,QAjDtH,SAACH,GACjBA,EAAES,iBACF3B,EAAW4B,KACX3B,EAAK4B,MAAMjC,GACNkC,MAAK,SAACC,GACH/B,EAAWgC,SAEdC,OAAM,SAACC,GACJlC,EAAWgC,MACXG,QAAQC,IAAI,QAASF,GACrB/B,EAAM,CACFkC,MAAO,wBACPC,YAAaJ,EAAIK,MACjBC,OAAQ,QACRC,SAAU,MACVC,SAAU,IACVC,YAAY,QAiCA,mBACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAQC,QAAQ,OAAOC,GAAIC,IAAMC,GAAG,mBAAmBC,YAAY,OAAnE,sCAIhB,cAAC,IAAD,CAAQvC,EAAE,MAAMC,EAAE,QAAQC,UAAU,WAApC,SACE,cAAC,IAAD,CAAOsC,IAAI,yBAAyBvC,EAAE,OAAOwC,GAAI,EAAGzC,EAAE,MAAM0C,IAAI","file":"static/js/6.f6f24ce7.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport \"../dashboard/index.css\"\r\nimport {Button, FormControl, FormErrorMessage, Image, Input, InputGroup, InputLeftElement,\r\n    InputRightElement,useBoolean, useToast, HStack,Spacer, VStack, Center} from '@chakra-ui/react'\r\nimport { useAuth } from '../../hooks'\r\nimport {Icon} from '../../ui-elements'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n    const [show, setShow] = useState(false)\r\n    const [state, setState] = useState({email:'admin@insafacademy.com',password:'insaf@123'})\r\n    const [loading, setLoading] = useBoolean()\r\n    const auth = useAuth()\r\n    const toast = useToast()\r\n\r\n    const handleInputChange = (name, value) => {\r\n        setState({\r\n            ...state,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        setLoading.on()\r\n        auth.login(state)\r\n            .then((res) => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n                console.log(\"Error\", err)\r\n                toast({\r\n                    title: \"Authentication Error!\",\r\n                    description: err.error,\r\n                    status: \"error\",\r\n                    position: \"top\",\r\n                    duration: 9000,\r\n                    isClosable: true,\r\n                  })\r\n            })\r\n\r\n    }\r\n    return(\r\n            <HStack spacing={0}>\r\n                <VStack w='50%' h='100vh' className='center'>\r\n                    <VStack alignItems='flex-start' w='350px' spacing={5}>                     \r\n                            <FormControl isInvalid={false}>                                    \r\n                                <InputGroup>\r\n                                    <InputLeftElement \r\n                                        pointerEvents=\"none\"\r\n                                        children={<Icon name=\"md-person\" />}\r\n                                    />                                \r\n                                    <Input  type=\"email\" onChange={(e) => handleInputChange('email', e.target.value)} placeholder=\"Email Address\" />\r\n                                </InputGroup>\r\n                                <FormErrorMessage>We'll never share your email.</FormErrorMessage>\r\n                            </FormControl>\r\n                            <FormControl isInvalid={false}>\r\n                                <InputGroup>\r\n                                    <InputLeftElement \r\n                                        pointerEvents=\"none\"\r\n                                        children={<Icon name=\"md-key\" />}\r\n                                    />                                \r\n                                    <Input type={show ? 'text' : 'password'} onChange={(e) => handleInputChange('password', e.target.value)} placeholder=\"Password\" />\r\n                                    <InputRightElement>\r\n                                        <Icon name={show ? \"md-eye-off\" : \"md-eye\"} onClick={() => setShow(!show)} />\r\n                                    </InputRightElement>\r\n                                </InputGroup>\r\n                                <FormErrorMessage>We'll never share your email.</FormErrorMessage>\r\n                            </FormControl>\r\n                            <HStack w='100%'>\r\n                                <Button px={7} type=\"submit\" form=\"login-form\" rounded='sm' isLoading={loading}  loadingText=\"Please wait...\" onClick={handleLogin}>Login</Button>\r\n                                <Spacer/>\r\n                                <Button variant=\"link\" as={Link} to=\"/forget-password\" colorScheme=\"blue\">Forget Password?</Button>\r\n                            </HStack>\r\n                    </VStack>\r\n                </VStack> \r\n                <Center w='50%' h='100vh' className='brand-bg'>\r\n                  <Image src=\"/images/logo-2 (3).png\" h=\"auto\" mb={3} w=\"50%\" alt='pakolive'/>\r\n                </Center>   \r\n            </HStack>              \r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n\r\n"],"sourceRoot":""}