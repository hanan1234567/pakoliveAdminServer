{"version":3,"sources":["pages/auth/ResetPassword.js"],"names":["ResetPassword","props","useState","state","setState","useBoolean","loading","setLoading","isValid","setValid","toast","useToast","params","useParams","navigate","useNavigate","useEffect","on","authApi","_check_reset","then","res","off","catch","err","handleInputChange","name","value","d","h","minH","bg","flex","flexDir","justifyContent","p","w","maxW","mx","src","mb","size","my","onSubmit","e","preventDefault","formdata","id","_reset_password","title","description","message","status","position","duration","isClosable","console","log","error","direction","isInvalid","pointerEvents","children","type","onChange","target","placeholder","pt","px","form","isLoading","loadingText","color","base","lg","md","alignItems"],"mappings":"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","file":"static/js/8.702a74eb.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams, useNavigate } from 'react-router-dom'\r\nimport {\r\n    Box, Stack, \r\n    Heading, Button, FormControl,\r\n    FormErrorMessage, Image, Spinner,\r\n    Input, InputGroup, InputLeftElement,\r\n    useBoolean, useToast, Text\r\n} from '@chakra-ui/react'\r\nimport { authApi } from '../../api'\r\nimport {Icon} from '../../ui-elements'\r\n\r\n\r\nconst ResetPassword = (props) => {\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useBoolean()\r\n    const [isValid, setValid ] = useBoolean()\r\n    const toast = useToast()\r\n    const params = useParams()\r\n    let navigate = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n        setLoading.on()\r\n        authApi._check_reset(params)\r\n            .then((res) => {\r\n                setValid.on()\r\n                setLoading.off()\r\n                \r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n                setValid.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const handleInputChange = (name, value) => {\r\n        setState({\r\n            ...state,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setLoading.on()\r\n        let formdata = {...state, id: params?.id}\r\n        authApi._reset_password(formdata)\r\n            .then((res) => {\r\n                setLoading.off()\r\n                toast({\r\n                    title: \"\",\r\n                    description: res.message,\r\n                    status: \"success\",\r\n                    position: \"top\",\r\n                    duration: 9000,\r\n                    isClosable: true,\r\n                  })\r\n                  navigate('/')\r\n                  \r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n                console.log(\"Error\", err)\r\n                toast({\r\n                    title: \"Error!\",\r\n                    description: err.error,\r\n                    status: \"error\",\r\n                    position: \"top\",\r\n                    duration: 9000,\r\n                    isClosable: true,\r\n                  })\r\n            })\r\n\r\n    }\r\n    return(\r\n        <Box \r\n            d=\"flex\" \r\n            h=\"100vh\"\r\n            minH='100vh'\r\n            // alignItems=\"center\" \r\n            // justifyContent=\"center\" \r\n            bg=\"white\"\r\n            // bgImage='./assets/auth-bg.svg' \r\n            // bgSize=\"cover\" \r\n            // bgAttachment=\"fixed\"\r\n            >\r\n            {/* <Box w=\"100%\" maxW=\"500px\" flexDir=\"column\" h=\"100%\" d=\"flex\" justifyContent=\"center\"> */}\r\n            <Box flex=\"1\" d=\"flex\" h=\"100%\" flexDir=\"column\" justifyContent=\"center\">\r\n                <Box p=\"10\" w=\"100%\" maxW=\"440px\" mx=\"auto\">\r\n                    <Image src=\"/images/insaf-academy-logo-h.svg\" h=\"90px\" mb=\"10\" w=\"auto\" />\r\n                    {\r\n                        loading &&\r\n                        <Spinner />\r\n                    }\r\n                    <Heading size=\"md\" my=\"3\">Reset Password</Heading>\r\n                    {\r\n                        isValid ?\r\n                        <>\r\n                            <Text mb=\"5\">Please fill in the form below to reset your password.</Text>\r\n                            <form onSubmit={handleSubmit} id=\"reset-form\">\r\n                                <Stack direction=\"column\">                                \r\n                                    <FormControl isInvalid={false} mb={3}>                                    \r\n                                        <InputGroup>\r\n                                            <InputLeftElement \r\n                                                pointerEvents=\"none\"\r\n                                                children={<Icon name=\"md-key\" />}\r\n                                            />                                \r\n                                            <Input  type=\"password\" onChange={(e) => handleInputChange('password', e.target.value)} placeholder=\"New Passowrd\" />\r\n                                        </InputGroup>\r\n                                        <FormErrorMessage>We'll never share your email.</FormErrorMessage>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl isInvalid={false} mb={3}>                                    \r\n                                        <InputGroup>\r\n                                            <InputLeftElement \r\n                                                pointerEvents=\"none\"\r\n                                                children={<Icon name=\"md-key\" />}\r\n                                            />                                \r\n                                            <Input  type=\"password\" onChange={(e) => handleInputChange('confirm_password', e.target.value)} placeholder=\"Confirm Passowrd\" />\r\n                                        </InputGroup>\r\n                                        <FormErrorMessage>We'll never share your email.</FormErrorMessage>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                    \r\n                                    <Stack direction=\"row\" pt=\"5\" justifyContent=\"space-between\">\r\n                                        <Button px={7} type=\"submit\" form=\"reset-form\" isLoading={loading}  loadingText=\"Please wait...\">Submit</Button>\r\n                                    </Stack>\r\n\r\n                                </Stack>\r\n                            </form>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Box bg=\"red.100\" p=\"4\">\r\n                                <Text color=\"red.500\">Invalid Link</Text>\r\n                            </Box>\r\n                        </>\r\n                    }\r\n                </Box>\r\n            </Box>\r\n            {/* <Text fontSize={{ base: \"24px\", md: \"40px\", lg: \"56px\" }}> */}\r\n\r\n            <Box flex=\"2\" d={{ base: 'none', lg: \"flex\", md: 'none' }} alignItems=\"center\" justifyContent=\"center\" w=\"100%\" h=\"100%\" bg=\"brand.500\">\r\n                <Heading size=\"lg\" color=\"white\">Insaf Academy Portal</Heading>\r\n            </Box>                  \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n\r\n\r\n"],"sourceRoot":""}